{"version":3,"sources":["../../../node_modules/@jspm/core/nodelibs/browser/process.js","../../../node_modules/@jspm/core/nodelibs/browser/chunk-DtuTasat.js","../../../node_modules/@jspm/core/nodelibs/browser/buffer.js","../src/actions/transfer.ts","../src/providers/wallet.ts","../src/utils/amount.ts","../src/constants.ts","../src/environment.ts","../src/utils/schemas.ts","../src/providers/graphql.ts","../src/providers/nativeAuth.ts","../src/graphql/tokensQuery.ts","../src/utils/getToken.ts","../src/utils/accessTokenManagement.ts","../src/actions/createToken.ts","../src/actions/swap.ts","../src/graphql/swapQuery.ts","../src/index.ts"],"sourcesContent":["function unimplemented(name) {\r\n  throw new Error('Node.js process ' + name + ' is not supported by JSPM core outside of Node.js');\r\n}\r\n\r\nvar queue = [];\r\nvar draining = false;\r\nvar currentQueue;\r\nvar queueIndex = -1;\r\n\r\nfunction cleanUpNextTick() {\r\n  if (!draining || !currentQueue)\r\n    return;\r\n  draining = false;\r\n  if (currentQueue.length) {\r\n    queue = currentQueue.concat(queue);\r\n  }\r\n  else {\r\n    queueIndex = -1;\r\n  }\r\n  if (queue.length)\r\n    drainQueue();\r\n}\r\n\r\nfunction drainQueue() {\r\n  if (draining)\r\n    return;\r\n  var timeout = setTimeout(cleanUpNextTick, 0);\r\n  draining = true;\r\n\r\n  var len = queue.length;\r\n  while(len) {\r\n    currentQueue = queue;\r\n    queue = [];\r\n    while (++queueIndex < len) {\r\n      if (currentQueue)\r\n        currentQueue[queueIndex].run();\r\n    }\r\n    queueIndex = -1;\r\n    len = queue.length;\r\n  }\r\n  currentQueue = null;\r\n  draining = false;\r\n  clearTimeout(timeout);\r\n}\r\n\r\nfunction nextTick (fun) {\r\n  var args = new Array(arguments.length - 1);\r\n  if (arguments.length > 1) {\r\n    for (var i = 1; i < arguments.length; i++)\r\n      args[i - 1] = arguments[i];\r\n  }\r\n  queue.push(new Item(fun, args));\r\n  if (queue.length === 1 && !draining)\r\n    setTimeout(drainQueue, 0);\r\n}\r\n// v8 likes predictible objects\r\nfunction Item(fun, array) {\r\n  this.fun = fun;\r\n  this.array = array;\r\n}\r\nItem.prototype.run = function () {\r\n  this.fun.apply(null, this.array);\r\n};\r\n\r\nvar title = 'browser';\r\nvar arch = 'x64';\r\nvar platform = 'browser';\r\nvar env = {\r\n  PATH: '/usr/bin',\r\n  LANG: typeof navigator !== 'undefined' ? navigator.language + '.UTF-8' : undefined,\r\n  PWD: '/',\r\n  HOME: '/home',\r\n  TMP: '/tmp',\r\n};\r\nvar argv = ['/usr/bin/node'];\r\nvar execArgv = [];\r\nvar version = 'v16.8.0';\r\nvar versions = {};\r\n\r\nvar emitWarning = function(message, type) {\r\n  console.warn((type ? (type + ': ') : '') + message);\r\n};\r\n\r\nvar binding = function(name) { unimplemented('binding'); };\r\n\r\nvar umask = function(mask) { return 0; };\r\n\r\nvar cwd = function() { return '/'; };\r\nvar chdir = function(dir) {};\r\n\r\nvar release = {\r\n  name: 'node',\r\n  sourceUrl: '',\r\n  headersUrl: '',\r\n  libUrl: '',\r\n};\r\n\r\nfunction noop() {}\r\n\r\nvar browser = true;\r\nvar _rawDebug = noop;\r\nvar moduleLoadList = [];\r\nfunction _linkedBinding(name) { unimplemented('_linkedBinding'); }\r\nvar domain = {};\r\nvar _exiting = false;\r\nvar config = {};\r\nfunction dlopen(name) { unimplemented('dlopen'); }\r\nfunction _getActiveRequests() { return []; }\r\nfunction _getActiveHandles() { return []; }\r\nvar reallyExit = noop;\r\nvar _kill = noop;\r\nvar cpuUsage = function() { return {}; };\r\nvar resourceUsage = cpuUsage;\r\nvar memoryUsage = cpuUsage;\r\nvar kill = noop;\r\nvar exit = noop;\r\nvar openStdin = noop;\r\nvar allowedNodeEnvironmentFlags = {};\r\nfunction assert(condition, message) {\r\n  if (!condition) throw new Error(message || 'assertion error');\r\n}\r\nvar features = {\r\n  inspector: false,\r\n  debug: false,\r\n  uv: false,\r\n  ipv6: false,\r\n  tls_alpn: false,\r\n  tls_sni: false,\r\n  tls_ocsp: false,\r\n  tls: false,\r\n  cached_builtins: true,\r\n};\r\nvar _fatalExceptions = noop;\r\nvar setUncaughtExceptionCaptureCallback = noop;\r\nfunction hasUncaughtExceptionCaptureCallback() { return false; }var _tickCallback = noop;\r\nvar _debugProcess = noop;\r\nvar _debugEnd = noop;\r\nvar _startProfilerIdleNotifier = noop;\r\nvar _stopProfilerIdleNotifier = noop;\r\nvar stdout = undefined;\r\nvar stderr = undefined;\r\nvar stdin = undefined;\r\nvar abort = noop;\r\nvar pid = 2;\r\nvar ppid = 1;\r\nvar execPath = '/bin/usr/node';\r\nvar debugPort = 9229;\r\nvar argv0 = 'node';\r\nvar _preload_modules = [];\r\nvar setSourceMapsEnabled = noop;\r\n\r\nvar _performance = {\r\n  now: typeof performance !== 'undefined' ? performance.now.bind(performance) : undefined,\r\n  timing: typeof performance !== 'undefined' ? performance.timing : undefined,\r\n};\r\nif (_performance.now === undefined) {\r\n  var nowOffset = Date.now();\r\n\r\n  if (_performance.timing && _performance.timing.navigationStart) {\r\n    nowOffset = _performance.timing.navigationStart;\r\n  }\r\n  _performance.now = () => Date.now() - nowOffset;\r\n}\r\n\r\nfunction uptime() {\r\n  return _performance.now() / 1000;\r\n}\r\n\r\nvar nanoPerSec = 1000000000;\r\nfunction hrtime(previousTimestamp) {\r\n  var baseNow = Math.floor((Date.now() - _performance.now()) * 1e-3);\r\n  var clocktime = _performance.now() * 1e-3;\r\n  var seconds = Math.floor(clocktime) + baseNow;\r\n  var nanoseconds = Math.floor((clocktime % 1) * 1e9);\r\n  if (previousTimestamp) {\r\n    seconds = seconds - previousTimestamp[0];\r\n    nanoseconds = nanoseconds - previousTimestamp[1];\r\n    if (nanoseconds < 0) {\r\n      seconds--;\r\n      nanoseconds += nanoPerSec;\r\n    }\r\n  }\r\n  return [seconds, nanoseconds];\r\n}hrtime.bigint = function(time) {\r\n  var diff = hrtime(time);\r\n  if (typeof BigInt === 'undefined') {\r\n    return diff[0] * nanoPerSec + diff[1];\r\n  }\r\n  return BigInt(diff[0] * nanoPerSec) + BigInt(diff[1]);\r\n};\r\n\r\nvar _maxListeners = 10;\r\nvar _events = {};\r\nvar _eventsCount = 0;\r\nfunction on () { return process }var addListener = on;\r\nvar once = on;\r\nvar off = on;\r\nvar removeListener = on;\r\nvar removeAllListeners = on;\r\nvar emit = noop;\r\nvar prependListener = on;\r\nvar prependOnceListener = on;\r\nfunction listeners (name) { return []; }\r\nvar process = {\r\n  version,\r\n  versions,\r\n  arch,\r\n  platform,\r\n  browser,\r\n  release,\r\n  _rawDebug,\r\n  moduleLoadList,\r\n  binding,\r\n  _linkedBinding,\r\n  _events,\r\n  _eventsCount,\r\n  _maxListeners,\r\n  on,\r\n  addListener,\r\n  once,\r\n  off,\r\n  removeListener,\r\n  removeAllListeners,\r\n  emit,\r\n  prependListener,\r\n  prependOnceListener,\r\n  listeners,\r\n  domain,\r\n  _exiting,\r\n  config,\r\n  dlopen,\r\n  uptime,\r\n  _getActiveRequests,\r\n  _getActiveHandles,\r\n  reallyExit,\r\n  _kill,\r\n  cpuUsage,\r\n  resourceUsage,\r\n  memoryUsage,\r\n  kill,\r\n  exit,\r\n  openStdin,\r\n  allowedNodeEnvironmentFlags,\r\n  assert,\r\n  features,\r\n  _fatalExceptions,\r\n  setUncaughtExceptionCaptureCallback,\r\n  hasUncaughtExceptionCaptureCallback,\r\n  emitWarning,\r\n  nextTick,\r\n  _tickCallback,\r\n  _debugProcess,\r\n  _debugEnd,\r\n  _startProfilerIdleNotifier,\r\n  _stopProfilerIdleNotifier,\r\n  stdout,\r\n  stdin,\r\n  stderr,\r\n  abort,\r\n  umask,\r\n  chdir,\r\n  cwd,\r\n  env,\r\n  title,\r\n  argv,\r\n  execArgv,\r\n  pid,\r\n  ppid,\r\n  execPath,\r\n  debugPort,\r\n  hrtime,\r\n  argv0,\r\n  _preload_modules,\r\n  setSourceMapsEnabled,\r\n};\n\nexport { _debugEnd, _debugProcess, _events, _eventsCount, _exiting, _fatalExceptions, _getActiveHandles, _getActiveRequests, _kill, _linkedBinding, _maxListeners, _preload_modules, _rawDebug, _startProfilerIdleNotifier, _stopProfilerIdleNotifier, _tickCallback, abort, addListener, allowedNodeEnvironmentFlags, arch, argv, argv0, assert, binding, browser, chdir, config, cpuUsage, cwd, debugPort, process as default, dlopen, domain, emit, emitWarning, env, execArgv, execPath, exit, features, hasUncaughtExceptionCaptureCallback, hrtime, kill, listeners, memoryUsage, moduleLoadList, nextTick, off, on, once, openStdin, pid, platform, ppid, prependListener, prependOnceListener, reallyExit, release, removeAllListeners, removeListener, resourceUsage, setSourceMapsEnabled, setUncaughtExceptionCaptureCallback, stderr, stdin, stdout, title, umask, uptime, version, versions };\n","var exports$2 = {},\n  _dewExec$2 = false;\nfunction dew$2() {\n  if (_dewExec$2) return exports$2;\n  _dewExec$2 = true;\n  exports$2.byteLength = byteLength;\n  exports$2.toByteArray = toByteArray;\n  exports$2.fromByteArray = fromByteArray;\n  var lookup = [];\n  var revLookup = [];\n  var Arr = typeof Uint8Array !== \"undefined\" ? Uint8Array : Array;\n  var code = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\";\n  for (var i = 0, len = code.length; i < len; ++i) {\n    lookup[i] = code[i];\n    revLookup[code.charCodeAt(i)] = i;\n  }\n\n  // Support decoding URL-safe base64 strings, as Node.js does.\n  // See: https://en.wikipedia.org/wiki/Base64#URL_applications\n  revLookup[\"-\".charCodeAt(0)] = 62;\n  revLookup[\"_\".charCodeAt(0)] = 63;\n  function getLens(b64) {\n    var len = b64.length;\n    if (len % 4 > 0) {\n      throw new Error(\"Invalid string. Length must be a multiple of 4\");\n    }\n\n    // Trim off extra bytes after placeholder bytes are found\n    // See: https://github.com/beatgammit/base64-js/issues/42\n    var validLen = b64.indexOf(\"=\");\n    if (validLen === -1) validLen = len;\n    var placeHoldersLen = validLen === len ? 0 : 4 - validLen % 4;\n    return [validLen, placeHoldersLen];\n  }\n\n  // base64 is 4/3 + up to two characters of the original data\n  function byteLength(b64) {\n    var lens = getLens(b64);\n    var validLen = lens[0];\n    var placeHoldersLen = lens[1];\n    return (validLen + placeHoldersLen) * 3 / 4 - placeHoldersLen;\n  }\n  function _byteLength(b64, validLen, placeHoldersLen) {\n    return (validLen + placeHoldersLen) * 3 / 4 - placeHoldersLen;\n  }\n  function toByteArray(b64) {\n    var tmp;\n    var lens = getLens(b64);\n    var validLen = lens[0];\n    var placeHoldersLen = lens[1];\n    var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen));\n    var curByte = 0;\n\n    // if there are placeholders, only get up to the last complete 4 chars\n    var len = placeHoldersLen > 0 ? validLen - 4 : validLen;\n    var i;\n    for (i = 0; i < len; i += 4) {\n      tmp = revLookup[b64.charCodeAt(i)] << 18 | revLookup[b64.charCodeAt(i + 1)] << 12 | revLookup[b64.charCodeAt(i + 2)] << 6 | revLookup[b64.charCodeAt(i + 3)];\n      arr[curByte++] = tmp >> 16 & 255;\n      arr[curByte++] = tmp >> 8 & 255;\n      arr[curByte++] = tmp & 255;\n    }\n    if (placeHoldersLen === 2) {\n      tmp = revLookup[b64.charCodeAt(i)] << 2 | revLookup[b64.charCodeAt(i + 1)] >> 4;\n      arr[curByte++] = tmp & 255;\n    }\n    if (placeHoldersLen === 1) {\n      tmp = revLookup[b64.charCodeAt(i)] << 10 | revLookup[b64.charCodeAt(i + 1)] << 4 | revLookup[b64.charCodeAt(i + 2)] >> 2;\n      arr[curByte++] = tmp >> 8 & 255;\n      arr[curByte++] = tmp & 255;\n    }\n    return arr;\n  }\n  function tripletToBase64(num) {\n    return lookup[num >> 18 & 63] + lookup[num >> 12 & 63] + lookup[num >> 6 & 63] + lookup[num & 63];\n  }\n  function encodeChunk(uint8, start, end) {\n    var tmp;\n    var output = [];\n    for (var i = start; i < end; i += 3) {\n      tmp = (uint8[i] << 16 & 16711680) + (uint8[i + 1] << 8 & 65280) + (uint8[i + 2] & 255);\n      output.push(tripletToBase64(tmp));\n    }\n    return output.join(\"\");\n  }\n  function fromByteArray(uint8) {\n    var tmp;\n    var len = uint8.length;\n    var extraBytes = len % 3; // if we have 1 byte left, pad 2 bytes\n    var parts = [];\n    var maxChunkLength = 16383; // must be multiple of 3\n\n    // go through the array every three bytes, we'll deal with trailing stuff later\n    for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n      parts.push(encodeChunk(uint8, i, i + maxChunkLength > len2 ? len2 : i + maxChunkLength));\n    }\n\n    // pad the end with zeros, but make sure to not forget the extra bytes\n    if (extraBytes === 1) {\n      tmp = uint8[len - 1];\n      parts.push(lookup[tmp >> 2] + lookup[tmp << 4 & 63] + \"==\");\n    } else if (extraBytes === 2) {\n      tmp = (uint8[len - 2] << 8) + uint8[len - 1];\n      parts.push(lookup[tmp >> 10] + lookup[tmp >> 4 & 63] + lookup[tmp << 2 & 63] + \"=\");\n    }\n    return parts.join(\"\");\n  }\n  return exports$2;\n}\n\nvar exports$1 = {},\n  _dewExec$1 = false;\nfunction dew$1() {\n  if (_dewExec$1) return exports$1;\n  _dewExec$1 = true;\n  /*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */\n  exports$1.read = function (buffer, offset, isLE, mLen, nBytes) {\n    var e, m;\n    var eLen = nBytes * 8 - mLen - 1;\n    var eMax = (1 << eLen) - 1;\n    var eBias = eMax >> 1;\n    var nBits = -7;\n    var i = isLE ? nBytes - 1 : 0;\n    var d = isLE ? -1 : 1;\n    var s = buffer[offset + i];\n    i += d;\n    e = s & (1 << -nBits) - 1;\n    s >>= -nBits;\n    nBits += eLen;\n    for (; nBits > 0; e = e * 256 + buffer[offset + i], i += d, nBits -= 8) {}\n    m = e & (1 << -nBits) - 1;\n    e >>= -nBits;\n    nBits += mLen;\n    for (; nBits > 0; m = m * 256 + buffer[offset + i], i += d, nBits -= 8) {}\n    if (e === 0) {\n      e = 1 - eBias;\n    } else if (e === eMax) {\n      return m ? NaN : (s ? -1 : 1) * Infinity;\n    } else {\n      m = m + Math.pow(2, mLen);\n      e = e - eBias;\n    }\n    return (s ? -1 : 1) * m * Math.pow(2, e - mLen);\n  };\n  exports$1.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n    var e, m, c;\n    var eLen = nBytes * 8 - mLen - 1;\n    var eMax = (1 << eLen) - 1;\n    var eBias = eMax >> 1;\n    var rt = mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0;\n    var i = isLE ? 0 : nBytes - 1;\n    var d = isLE ? 1 : -1;\n    var s = value < 0 || value === 0 && 1 / value < 0 ? 1 : 0;\n    value = Math.abs(value);\n    if (isNaN(value) || value === Infinity) {\n      m = isNaN(value) ? 1 : 0;\n      e = eMax;\n    } else {\n      e = Math.floor(Math.log(value) / Math.LN2);\n      if (value * (c = Math.pow(2, -e)) < 1) {\n        e--;\n        c *= 2;\n      }\n      if (e + eBias >= 1) {\n        value += rt / c;\n      } else {\n        value += rt * Math.pow(2, 1 - eBias);\n      }\n      if (value * c >= 2) {\n        e++;\n        c /= 2;\n      }\n      if (e + eBias >= eMax) {\n        m = 0;\n        e = eMax;\n      } else if (e + eBias >= 1) {\n        m = (value * c - 1) * Math.pow(2, mLen);\n        e = e + eBias;\n      } else {\n        m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen);\n        e = 0;\n      }\n    }\n    for (; mLen >= 8; buffer[offset + i] = m & 255, i += d, m /= 256, mLen -= 8) {}\n    e = e << mLen | m;\n    eLen += mLen;\n    for (; eLen > 0; buffer[offset + i] = e & 255, i += d, e /= 256, eLen -= 8) {}\n    buffer[offset + i - d] |= s * 128;\n  };\n  return exports$1;\n}\n\nvar exports = {},\n  _dewExec = false;\nfunction dew() {\n  if (_dewExec) return exports;\n  _dewExec = true;\n  const base64 = dew$2();\n  const ieee754 = dew$1();\n  const customInspectSymbol = typeof Symbol === \"function\" && typeof Symbol[\"for\"] === \"function\" // eslint-disable-line dot-notation\n  ? Symbol[\"for\"](\"nodejs.util.inspect.custom\") // eslint-disable-line dot-notation\n  : null;\n  exports.Buffer = Buffer;\n  exports.SlowBuffer = SlowBuffer;\n  exports.INSPECT_MAX_BYTES = 50;\n  const K_MAX_LENGTH = 2147483647;\n  exports.kMaxLength = K_MAX_LENGTH;\n\n  /**\n   * If `Buffer.TYPED_ARRAY_SUPPORT`:\n   *   === true    Use Uint8Array implementation (fastest)\n   *   === false   Print warning and recommend using `buffer` v4.x which has an Object\n   *               implementation (most compatible, even IE6)\n   *\n   * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n   * Opera 11.6+, iOS 4.2+.\n   *\n   * We report that the browser does not support typed arrays if the are not subclassable\n   * using __proto__. Firefox 4-29 lacks support for adding new properties to `Uint8Array`\n   * (See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438). IE 10 lacks support\n   * for __proto__ and has a buggy typed array implementation.\n   */\n  Buffer.TYPED_ARRAY_SUPPORT = typedArraySupport();\n  if (!Buffer.TYPED_ARRAY_SUPPORT && typeof console !== \"undefined\" && typeof console.error === \"function\") {\n    console.error(\"This browser lacks typed array (Uint8Array) support which is required by \" + \"`buffer` v5.x. Use `buffer` v4.x if you require old browser support.\");\n  }\n  function typedArraySupport() {\n    // Can typed array instances can be augmented?\n    try {\n      const arr = new Uint8Array(1);\n      const proto = {\n        foo: function () {\n          return 42;\n        }\n      };\n      Object.setPrototypeOf(proto, Uint8Array.prototype);\n      Object.setPrototypeOf(arr, proto);\n      return arr.foo() === 42;\n    } catch (e) {\n      return false;\n    }\n  }\n  Object.defineProperty(Buffer.prototype, \"parent\", {\n    enumerable: true,\n    get: function () {\n      if (!Buffer.isBuffer(this)) return undefined;\n      return this.buffer;\n    }\n  });\n  Object.defineProperty(Buffer.prototype, \"offset\", {\n    enumerable: true,\n    get: function () {\n      if (!Buffer.isBuffer(this)) return undefined;\n      return this.byteOffset;\n    }\n  });\n  function createBuffer(length) {\n    if (length > K_MAX_LENGTH) {\n      throw new RangeError(\"The value \\\"\" + length + \"\\\" is invalid for option \\\"size\\\"\");\n    }\n    // Return an augmented `Uint8Array` instance\n    const buf = new Uint8Array(length);\n    Object.setPrototypeOf(buf, Buffer.prototype);\n    return buf;\n  }\n\n  /**\n   * The Buffer constructor returns instances of `Uint8Array` that have their\n   * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n   * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n   * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n   * returns a single octet.\n   *\n   * The `Uint8Array` prototype remains unmodified.\n   */\n\n  function Buffer(arg, encodingOrOffset, length) {\n    // Common case.\n    if (typeof arg === \"number\") {\n      if (typeof encodingOrOffset === \"string\") {\n        throw new TypeError(\"The \\\"string\\\" argument must be of type string. Received type number\");\n      }\n      return allocUnsafe(arg);\n    }\n    return from(arg, encodingOrOffset, length);\n  }\n  Buffer.poolSize = 8192; // not used by this implementation\n\n  function from(value, encodingOrOffset, length) {\n    if (typeof value === \"string\") {\n      return fromString(value, encodingOrOffset);\n    }\n    if (ArrayBuffer.isView(value)) {\n      return fromArrayView(value);\n    }\n    if (value == null) {\n      throw new TypeError(\"The first argument must be one of type string, Buffer, ArrayBuffer, Array, \" + \"or Array-like Object. Received type \" + typeof value);\n    }\n    if (isInstance(value, ArrayBuffer) || value && isInstance(value.buffer, ArrayBuffer)) {\n      return fromArrayBuffer(value, encodingOrOffset, length);\n    }\n    if (typeof SharedArrayBuffer !== \"undefined\" && (isInstance(value, SharedArrayBuffer) || value && isInstance(value.buffer, SharedArrayBuffer))) {\n      return fromArrayBuffer(value, encodingOrOffset, length);\n    }\n    if (typeof value === \"number\") {\n      throw new TypeError(\"The \\\"value\\\" argument must not be of type number. Received type number\");\n    }\n    const valueOf = value.valueOf && value.valueOf();\n    if (valueOf != null && valueOf !== value) {\n      return Buffer.from(valueOf, encodingOrOffset, length);\n    }\n    const b = fromObject(value);\n    if (b) return b;\n    if (typeof Symbol !== \"undefined\" && Symbol.toPrimitive != null && typeof value[Symbol.toPrimitive] === \"function\") {\n      return Buffer.from(value[Symbol.toPrimitive](\"string\"), encodingOrOffset, length);\n    }\n    throw new TypeError(\"The first argument must be one of type string, Buffer, ArrayBuffer, Array, \" + \"or Array-like Object. Received type \" + typeof value);\n  }\n\n  /**\n   * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n   * if value is a number.\n   * Buffer.from(str[, encoding])\n   * Buffer.from(array)\n   * Buffer.from(buffer)\n   * Buffer.from(arrayBuffer[, byteOffset[, length]])\n   **/\n  Buffer.from = function (value, encodingOrOffset, length) {\n    return from(value, encodingOrOffset, length);\n  };\n\n  // Note: Change prototype *after* Buffer.from is defined to workaround Chrome bug:\n  // https://github.com/feross/buffer/pull/148\n  Object.setPrototypeOf(Buffer.prototype, Uint8Array.prototype);\n  Object.setPrototypeOf(Buffer, Uint8Array);\n  function assertSize(size) {\n    if (typeof size !== \"number\") {\n      throw new TypeError(\"\\\"size\\\" argument must be of type number\");\n    } else if (size < 0) {\n      throw new RangeError(\"The value \\\"\" + size + \"\\\" is invalid for option \\\"size\\\"\");\n    }\n  }\n  function alloc(size, fill, encoding) {\n    assertSize(size);\n    if (size <= 0) {\n      return createBuffer(size);\n    }\n    if (fill !== undefined) {\n      // Only pay attention to encoding if it's a string. This\n      // prevents accidentally sending in a number that would\n      // be interpreted as a start offset.\n      return typeof encoding === \"string\" ? createBuffer(size).fill(fill, encoding) : createBuffer(size).fill(fill);\n    }\n    return createBuffer(size);\n  }\n\n  /**\n   * Creates a new filled Buffer instance.\n   * alloc(size[, fill[, encoding]])\n   **/\n  Buffer.alloc = function (size, fill, encoding) {\n    return alloc(size, fill, encoding);\n  };\n  function allocUnsafe(size) {\n    assertSize(size);\n    return createBuffer(size < 0 ? 0 : checked(size) | 0);\n  }\n\n  /**\n   * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n   * */\n  Buffer.allocUnsafe = function (size) {\n    return allocUnsafe(size);\n  };\n  /**\n   * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n   */\n  Buffer.allocUnsafeSlow = function (size) {\n    return allocUnsafe(size);\n  };\n  function fromString(string, encoding) {\n    if (typeof encoding !== \"string\" || encoding === \"\") {\n      encoding = \"utf8\";\n    }\n    if (!Buffer.isEncoding(encoding)) {\n      throw new TypeError(\"Unknown encoding: \" + encoding);\n    }\n    const length = byteLength(string, encoding) | 0;\n    let buf = createBuffer(length);\n    const actual = buf.write(string, encoding);\n    if (actual !== length) {\n      // Writing a hex string, for example, that contains invalid characters will\n      // cause everything after the first invalid character to be ignored. (e.g.\n      // 'abxxcd' will be treated as 'ab')\n      buf = buf.slice(0, actual);\n    }\n    return buf;\n  }\n  function fromArrayLike(array) {\n    const length = array.length < 0 ? 0 : checked(array.length) | 0;\n    const buf = createBuffer(length);\n    for (let i = 0; i < length; i += 1) {\n      buf[i] = array[i] & 255;\n    }\n    return buf;\n  }\n  function fromArrayView(arrayView) {\n    if (isInstance(arrayView, Uint8Array)) {\n      const copy = new Uint8Array(arrayView);\n      return fromArrayBuffer(copy.buffer, copy.byteOffset, copy.byteLength);\n    }\n    return fromArrayLike(arrayView);\n  }\n  function fromArrayBuffer(array, byteOffset, length) {\n    if (byteOffset < 0 || array.byteLength < byteOffset) {\n      throw new RangeError(\"\\\"offset\\\" is outside of buffer bounds\");\n    }\n    if (array.byteLength < byteOffset + (length || 0)) {\n      throw new RangeError(\"\\\"length\\\" is outside of buffer bounds\");\n    }\n    let buf;\n    if (byteOffset === undefined && length === undefined) {\n      buf = new Uint8Array(array);\n    } else if (length === undefined) {\n      buf = new Uint8Array(array, byteOffset);\n    } else {\n      buf = new Uint8Array(array, byteOffset, length);\n    }\n\n    // Return an augmented `Uint8Array` instance\n    Object.setPrototypeOf(buf, Buffer.prototype);\n    return buf;\n  }\n  function fromObject(obj) {\n    if (Buffer.isBuffer(obj)) {\n      const len = checked(obj.length) | 0;\n      const buf = createBuffer(len);\n      if (buf.length === 0) {\n        return buf;\n      }\n      obj.copy(buf, 0, 0, len);\n      return buf;\n    }\n    if (obj.length !== undefined) {\n      if (typeof obj.length !== \"number\" || numberIsNaN(obj.length)) {\n        return createBuffer(0);\n      }\n      return fromArrayLike(obj);\n    }\n    if (obj.type === \"Buffer\" && Array.isArray(obj.data)) {\n      return fromArrayLike(obj.data);\n    }\n  }\n  function checked(length) {\n    // Note: cannot use `length < K_MAX_LENGTH` here because that fails when\n    // length is NaN (which is otherwise coerced to zero.)\n    if (length >= K_MAX_LENGTH) {\n      throw new RangeError(\"Attempt to allocate Buffer larger than maximum \" + \"size: 0x\" + K_MAX_LENGTH.toString(16) + \" bytes\");\n    }\n    return length | 0;\n  }\n  function SlowBuffer(length) {\n    if (+length != length) {\n      // eslint-disable-line eqeqeq\n      length = 0;\n    }\n    return Buffer.alloc(+length);\n  }\n  Buffer.isBuffer = function isBuffer(b) {\n    return b != null && b._isBuffer === true && b !== Buffer.prototype; // so Buffer.isBuffer(Buffer.prototype) will be false\n  };\n  Buffer.compare = function compare(a, b) {\n    if (isInstance(a, Uint8Array)) a = Buffer.from(a, a.offset, a.byteLength);\n    if (isInstance(b, Uint8Array)) b = Buffer.from(b, b.offset, b.byteLength);\n    if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n      throw new TypeError(\"The \\\"buf1\\\", \\\"buf2\\\" arguments must be one of type Buffer or Uint8Array\");\n    }\n    if (a === b) return 0;\n    let x = a.length;\n    let y = b.length;\n    for (let i = 0, len = Math.min(x, y); i < len; ++i) {\n      if (a[i] !== b[i]) {\n        x = a[i];\n        y = b[i];\n        break;\n      }\n    }\n    if (x < y) return -1;\n    if (y < x) return 1;\n    return 0;\n  };\n  Buffer.isEncoding = function isEncoding(encoding) {\n    switch (String(encoding).toLowerCase()) {\n      case \"hex\":\n      case \"utf8\":\n      case \"utf-8\":\n      case \"ascii\":\n      case \"latin1\":\n      case \"binary\":\n      case \"base64\":\n      case \"ucs2\":\n      case \"ucs-2\":\n      case \"utf16le\":\n      case \"utf-16le\":\n        return true;\n      default:\n        return false;\n    }\n  };\n  Buffer.concat = function concat(list, length) {\n    if (!Array.isArray(list)) {\n      throw new TypeError(\"\\\"list\\\" argument must be an Array of Buffers\");\n    }\n    if (list.length === 0) {\n      return Buffer.alloc(0);\n    }\n    let i;\n    if (length === undefined) {\n      length = 0;\n      for (i = 0; i < list.length; ++i) {\n        length += list[i].length;\n      }\n    }\n    const buffer = Buffer.allocUnsafe(length);\n    let pos = 0;\n    for (i = 0; i < list.length; ++i) {\n      let buf = list[i];\n      if (isInstance(buf, Uint8Array)) {\n        if (pos + buf.length > buffer.length) {\n          if (!Buffer.isBuffer(buf)) buf = Buffer.from(buf);\n          buf.copy(buffer, pos);\n        } else {\n          Uint8Array.prototype.set.call(buffer, buf, pos);\n        }\n      } else if (!Buffer.isBuffer(buf)) {\n        throw new TypeError(\"\\\"list\\\" argument must be an Array of Buffers\");\n      } else {\n        buf.copy(buffer, pos);\n      }\n      pos += buf.length;\n    }\n    return buffer;\n  };\n  function byteLength(string, encoding) {\n    if (Buffer.isBuffer(string)) {\n      return string.length;\n    }\n    if (ArrayBuffer.isView(string) || isInstance(string, ArrayBuffer)) {\n      return string.byteLength;\n    }\n    if (typeof string !== \"string\") {\n      throw new TypeError(\"The \\\"string\\\" argument must be one of type string, Buffer, or ArrayBuffer. \" + \"Received type \" + typeof string);\n    }\n    const len = string.length;\n    const mustMatch = arguments.length > 2 && arguments[2] === true;\n    if (!mustMatch && len === 0) return 0;\n\n    // Use a for loop to avoid recursion\n    let loweredCase = false;\n    for (;;) {\n      switch (encoding) {\n        case \"ascii\":\n        case \"latin1\":\n        case \"binary\":\n          return len;\n        case \"utf8\":\n        case \"utf-8\":\n          return utf8ToBytes(string).length;\n        case \"ucs2\":\n        case \"ucs-2\":\n        case \"utf16le\":\n        case \"utf-16le\":\n          return len * 2;\n        case \"hex\":\n          return len >>> 1;\n        case \"base64\":\n          return base64ToBytes(string).length;\n        default:\n          if (loweredCase) {\n            return mustMatch ? -1 : utf8ToBytes(string).length; // assume utf8\n          }\n          encoding = (\"\" + encoding).toLowerCase();\n          loweredCase = true;\n      }\n    }\n  }\n  Buffer.byteLength = byteLength;\n  function slowToString(encoding, start, end) {\n    let loweredCase = false;\n\n    // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n    // property of a typed array.\n\n    // This behaves neither like String nor Uint8Array in that we set start/end\n    // to their upper/lower bounds if the value passed is out of range.\n    // undefined is handled specially as per ECMA-262 6th Edition,\n    // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n    if (start === undefined || start < 0) {\n      start = 0;\n    }\n    // Return early if start > this.length. Done here to prevent potential uint32\n    // coercion fail below.\n    if (start > this.length) {\n      return \"\";\n    }\n    if (end === undefined || end > this.length) {\n      end = this.length;\n    }\n    if (end <= 0) {\n      return \"\";\n    }\n\n    // Force coercion to uint32. This will also coerce falsey/NaN values to 0.\n    end >>>= 0;\n    start >>>= 0;\n    if (end <= start) {\n      return \"\";\n    }\n    if (!encoding) encoding = \"utf8\";\n    while (true) {\n      switch (encoding) {\n        case \"hex\":\n          return hexSlice(this, start, end);\n        case \"utf8\":\n        case \"utf-8\":\n          return utf8Slice(this, start, end);\n        case \"ascii\":\n          return asciiSlice(this, start, end);\n        case \"latin1\":\n        case \"binary\":\n          return latin1Slice(this, start, end);\n        case \"base64\":\n          return base64Slice(this, start, end);\n        case \"ucs2\":\n        case \"ucs-2\":\n        case \"utf16le\":\n        case \"utf-16le\":\n          return utf16leSlice(this, start, end);\n        default:\n          if (loweredCase) throw new TypeError(\"Unknown encoding: \" + encoding);\n          encoding = (encoding + \"\").toLowerCase();\n          loweredCase = true;\n      }\n    }\n  }\n\n  // This property is used by `Buffer.isBuffer` (and the `is-buffer` npm package)\n  // to detect a Buffer instance. It's not possible to use `instanceof Buffer`\n  // reliably in a browserify context because there could be multiple different\n  // copies of the 'buffer' package in use. This method works even for Buffer\n  // instances that were created from another copy of the `buffer` package.\n  // See: https://github.com/feross/buffer/issues/154\n  Buffer.prototype._isBuffer = true;\n  function swap(b, n, m) {\n    const i = b[n];\n    b[n] = b[m];\n    b[m] = i;\n  }\n  Buffer.prototype.swap16 = function swap16() {\n    const len = this.length;\n    if (len % 2 !== 0) {\n      throw new RangeError(\"Buffer size must be a multiple of 16-bits\");\n    }\n    for (let i = 0; i < len; i += 2) {\n      swap(this, i, i + 1);\n    }\n    return this;\n  };\n  Buffer.prototype.swap32 = function swap32() {\n    const len = this.length;\n    if (len % 4 !== 0) {\n      throw new RangeError(\"Buffer size must be a multiple of 32-bits\");\n    }\n    for (let i = 0; i < len; i += 4) {\n      swap(this, i, i + 3);\n      swap(this, i + 1, i + 2);\n    }\n    return this;\n  };\n  Buffer.prototype.swap64 = function swap64() {\n    const len = this.length;\n    if (len % 8 !== 0) {\n      throw new RangeError(\"Buffer size must be a multiple of 64-bits\");\n    }\n    for (let i = 0; i < len; i += 8) {\n      swap(this, i, i + 7);\n      swap(this, i + 1, i + 6);\n      swap(this, i + 2, i + 5);\n      swap(this, i + 3, i + 4);\n    }\n    return this;\n  };\n  Buffer.prototype.toString = function toString() {\n    const length = this.length;\n    if (length === 0) return \"\";\n    if (arguments.length === 0) return utf8Slice(this, 0, length);\n    return slowToString.apply(this, arguments);\n  };\n  Buffer.prototype.toLocaleString = Buffer.prototype.toString;\n  Buffer.prototype.equals = function equals(b) {\n    if (!Buffer.isBuffer(b)) throw new TypeError(\"Argument must be a Buffer\");\n    if (this === b) return true;\n    return Buffer.compare(this, b) === 0;\n  };\n  Buffer.prototype.inspect = function inspect() {\n    let str = \"\";\n    const max = exports.INSPECT_MAX_BYTES;\n    str = this.toString(\"hex\", 0, max).replace(/(.{2})/g, \"$1 \").trim();\n    if (this.length > max) str += \" ... \";\n    return \"<Buffer \" + str + \">\";\n  };\n  if (customInspectSymbol) {\n    Buffer.prototype[customInspectSymbol] = Buffer.prototype.inspect;\n  }\n  Buffer.prototype.compare = function compare(target, start, end, thisStart, thisEnd) {\n    if (isInstance(target, Uint8Array)) {\n      target = Buffer.from(target, target.offset, target.byteLength);\n    }\n    if (!Buffer.isBuffer(target)) {\n      throw new TypeError(\"The \\\"target\\\" argument must be one of type Buffer or Uint8Array. \" + \"Received type \" + typeof target);\n    }\n    if (start === undefined) {\n      start = 0;\n    }\n    if (end === undefined) {\n      end = target ? target.length : 0;\n    }\n    if (thisStart === undefined) {\n      thisStart = 0;\n    }\n    if (thisEnd === undefined) {\n      thisEnd = this.length;\n    }\n    if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n      throw new RangeError(\"out of range index\");\n    }\n    if (thisStart >= thisEnd && start >= end) {\n      return 0;\n    }\n    if (thisStart >= thisEnd) {\n      return -1;\n    }\n    if (start >= end) {\n      return 1;\n    }\n    start >>>= 0;\n    end >>>= 0;\n    thisStart >>>= 0;\n    thisEnd >>>= 0;\n    if (this === target) return 0;\n    let x = thisEnd - thisStart;\n    let y = end - start;\n    const len = Math.min(x, y);\n    const thisCopy = this.slice(thisStart, thisEnd);\n    const targetCopy = target.slice(start, end);\n    for (let i = 0; i < len; ++i) {\n      if (thisCopy[i] !== targetCopy[i]) {\n        x = thisCopy[i];\n        y = targetCopy[i];\n        break;\n      }\n    }\n    if (x < y) return -1;\n    if (y < x) return 1;\n    return 0;\n  };\n\n  // Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n  // OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n  //\n  // Arguments:\n  // - buffer - a Buffer to search\n  // - val - a string, Buffer, or number\n  // - byteOffset - an index into `buffer`; will be clamped to an int32\n  // - encoding - an optional encoding, relevant is val is a string\n  // - dir - true for indexOf, false for lastIndexOf\n  function bidirectionalIndexOf(buffer, val, byteOffset, encoding, dir) {\n    // Empty buffer means no match\n    if (buffer.length === 0) return -1;\n\n    // Normalize byteOffset\n    if (typeof byteOffset === \"string\") {\n      encoding = byteOffset;\n      byteOffset = 0;\n    } else if (byteOffset > 2147483647) {\n      byteOffset = 2147483647;\n    } else if (byteOffset < -2147483648) {\n      byteOffset = -2147483648;\n    }\n    byteOffset = +byteOffset; // Coerce to Number.\n    if (numberIsNaN(byteOffset)) {\n      // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n      byteOffset = dir ? 0 : buffer.length - 1;\n    }\n\n    // Normalize byteOffset: negative offsets start from the end of the buffer\n    if (byteOffset < 0) byteOffset = buffer.length + byteOffset;\n    if (byteOffset >= buffer.length) {\n      if (dir) return -1;else byteOffset = buffer.length - 1;\n    } else if (byteOffset < 0) {\n      if (dir) byteOffset = 0;else return -1;\n    }\n\n    // Normalize val\n    if (typeof val === \"string\") {\n      val = Buffer.from(val, encoding);\n    }\n\n    // Finally, search either indexOf (if dir is true) or lastIndexOf\n    if (Buffer.isBuffer(val)) {\n      // Special case: looking for empty string/buffer always fails\n      if (val.length === 0) {\n        return -1;\n      }\n      return arrayIndexOf(buffer, val, byteOffset, encoding, dir);\n    } else if (typeof val === \"number\") {\n      val = val & 255; // Search for a byte value [0-255]\n      if (typeof Uint8Array.prototype.indexOf === \"function\") {\n        if (dir) {\n          return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset);\n        } else {\n          return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset);\n        }\n      }\n      return arrayIndexOf(buffer, [val], byteOffset, encoding, dir);\n    }\n    throw new TypeError(\"val must be string, number or Buffer\");\n  }\n  function arrayIndexOf(arr, val, byteOffset, encoding, dir) {\n    let indexSize = 1;\n    let arrLength = arr.length;\n    let valLength = val.length;\n    if (encoding !== undefined) {\n      encoding = String(encoding).toLowerCase();\n      if (encoding === \"ucs2\" || encoding === \"ucs-2\" || encoding === \"utf16le\" || encoding === \"utf-16le\") {\n        if (arr.length < 2 || val.length < 2) {\n          return -1;\n        }\n        indexSize = 2;\n        arrLength /= 2;\n        valLength /= 2;\n        byteOffset /= 2;\n      }\n    }\n    function read(buf, i) {\n      if (indexSize === 1) {\n        return buf[i];\n      } else {\n        return buf.readUInt16BE(i * indexSize);\n      }\n    }\n    let i;\n    if (dir) {\n      let foundIndex = -1;\n      for (i = byteOffset; i < arrLength; i++) {\n        if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n          if (foundIndex === -1) foundIndex = i;\n          if (i - foundIndex + 1 === valLength) return foundIndex * indexSize;\n        } else {\n          if (foundIndex !== -1) i -= i - foundIndex;\n          foundIndex = -1;\n        }\n      }\n    } else {\n      if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength;\n      for (i = byteOffset; i >= 0; i--) {\n        let found = true;\n        for (let j = 0; j < valLength; j++) {\n          if (read(arr, i + j) !== read(val, j)) {\n            found = false;\n            break;\n          }\n        }\n        if (found) return i;\n      }\n    }\n    return -1;\n  }\n  Buffer.prototype.includes = function includes(val, byteOffset, encoding) {\n    return this.indexOf(val, byteOffset, encoding) !== -1;\n  };\n  Buffer.prototype.indexOf = function indexOf(val, byteOffset, encoding) {\n    return bidirectionalIndexOf(this, val, byteOffset, encoding, true);\n  };\n  Buffer.prototype.lastIndexOf = function lastIndexOf(val, byteOffset, encoding) {\n    return bidirectionalIndexOf(this, val, byteOffset, encoding, false);\n  };\n  function hexWrite(buf, string, offset, length) {\n    offset = Number(offset) || 0;\n    const remaining = buf.length - offset;\n    if (!length) {\n      length = remaining;\n    } else {\n      length = Number(length);\n      if (length > remaining) {\n        length = remaining;\n      }\n    }\n    const strLen = string.length;\n    if (length > strLen / 2) {\n      length = strLen / 2;\n    }\n    let i;\n    for (i = 0; i < length; ++i) {\n      const parsed = parseInt(string.substr(i * 2, 2), 16);\n      if (numberIsNaN(parsed)) return i;\n      buf[offset + i] = parsed;\n    }\n    return i;\n  }\n  function utf8Write(buf, string, offset, length) {\n    return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length);\n  }\n  function asciiWrite(buf, string, offset, length) {\n    return blitBuffer(asciiToBytes(string), buf, offset, length);\n  }\n  function base64Write(buf, string, offset, length) {\n    return blitBuffer(base64ToBytes(string), buf, offset, length);\n  }\n  function ucs2Write(buf, string, offset, length) {\n    return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length);\n  }\n  Buffer.prototype.write = function write(string, offset, length, encoding) {\n    // Buffer#write(string)\n    if (offset === undefined) {\n      encoding = \"utf8\";\n      length = this.length;\n      offset = 0;\n      // Buffer#write(string, encoding)\n    } else if (length === undefined && typeof offset === \"string\") {\n      encoding = offset;\n      length = this.length;\n      offset = 0;\n      // Buffer#write(string, offset[, length][, encoding])\n    } else if (isFinite(offset)) {\n      offset = offset >>> 0;\n      if (isFinite(length)) {\n        length = length >>> 0;\n        if (encoding === undefined) encoding = \"utf8\";\n      } else {\n        encoding = length;\n        length = undefined;\n      }\n    } else {\n      throw new Error(\"Buffer.write(string, encoding, offset[, length]) is no longer supported\");\n    }\n    const remaining = this.length - offset;\n    if (length === undefined || length > remaining) length = remaining;\n    if (string.length > 0 && (length < 0 || offset < 0) || offset > this.length) {\n      throw new RangeError(\"Attempt to write outside buffer bounds\");\n    }\n    if (!encoding) encoding = \"utf8\";\n    let loweredCase = false;\n    for (;;) {\n      switch (encoding) {\n        case \"hex\":\n          return hexWrite(this, string, offset, length);\n        case \"utf8\":\n        case \"utf-8\":\n          return utf8Write(this, string, offset, length);\n        case \"ascii\":\n        case \"latin1\":\n        case \"binary\":\n          return asciiWrite(this, string, offset, length);\n        case \"base64\":\n          // Warning: maxLength not taken into account in base64Write\n          return base64Write(this, string, offset, length);\n        case \"ucs2\":\n        case \"ucs-2\":\n        case \"utf16le\":\n        case \"utf-16le\":\n          return ucs2Write(this, string, offset, length);\n        default:\n          if (loweredCase) throw new TypeError(\"Unknown encoding: \" + encoding);\n          encoding = (\"\" + encoding).toLowerCase();\n          loweredCase = true;\n      }\n    }\n  };\n  Buffer.prototype.toJSON = function toJSON() {\n    return {\n      type: \"Buffer\",\n      data: Array.prototype.slice.call(this._arr || this, 0)\n    };\n  };\n  function base64Slice(buf, start, end) {\n    if (start === 0 && end === buf.length) {\n      return base64.fromByteArray(buf);\n    } else {\n      return base64.fromByteArray(buf.slice(start, end));\n    }\n  }\n  function utf8Slice(buf, start, end) {\n    end = Math.min(buf.length, end);\n    const res = [];\n    let i = start;\n    while (i < end) {\n      const firstByte = buf[i];\n      let codePoint = null;\n      let bytesPerSequence = firstByte > 239 ? 4 : firstByte > 223 ? 3 : firstByte > 191 ? 2 : 1;\n      if (i + bytesPerSequence <= end) {\n        let secondByte, thirdByte, fourthByte, tempCodePoint;\n        switch (bytesPerSequence) {\n          case 1:\n            if (firstByte < 128) {\n              codePoint = firstByte;\n            }\n            break;\n          case 2:\n            secondByte = buf[i + 1];\n            if ((secondByte & 192) === 128) {\n              tempCodePoint = (firstByte & 31) << 6 | secondByte & 63;\n              if (tempCodePoint > 127) {\n                codePoint = tempCodePoint;\n              }\n            }\n            break;\n          case 3:\n            secondByte = buf[i + 1];\n            thirdByte = buf[i + 2];\n            if ((secondByte & 192) === 128 && (thirdByte & 192) === 128) {\n              tempCodePoint = (firstByte & 15) << 12 | (secondByte & 63) << 6 | thirdByte & 63;\n              if (tempCodePoint > 2047 && (tempCodePoint < 55296 || tempCodePoint > 57343)) {\n                codePoint = tempCodePoint;\n              }\n            }\n            break;\n          case 4:\n            secondByte = buf[i + 1];\n            thirdByte = buf[i + 2];\n            fourthByte = buf[i + 3];\n            if ((secondByte & 192) === 128 && (thirdByte & 192) === 128 && (fourthByte & 192) === 128) {\n              tempCodePoint = (firstByte & 15) << 18 | (secondByte & 63) << 12 | (thirdByte & 63) << 6 | fourthByte & 63;\n              if (tempCodePoint > 65535 && tempCodePoint < 1114112) {\n                codePoint = tempCodePoint;\n              }\n            }\n        }\n      }\n      if (codePoint === null) {\n        // we did not generate a valid codePoint so insert a\n        // replacement char (U+FFFD) and advance only 1 byte\n        codePoint = 65533;\n        bytesPerSequence = 1;\n      } else if (codePoint > 65535) {\n        // encode to utf16 (surrogate pair dance)\n        codePoint -= 65536;\n        res.push(codePoint >>> 10 & 1023 | 55296);\n        codePoint = 56320 | codePoint & 1023;\n      }\n      res.push(codePoint);\n      i += bytesPerSequence;\n    }\n    return decodeCodePointsArray(res);\n  }\n\n  // Based on http://stackoverflow.com/a/22747272/680742, the browser with\n  // the lowest limit is Chrome, with 0x10000 args.\n  // We go 1 magnitude less, for safety\n  const MAX_ARGUMENTS_LENGTH = 4096;\n  function decodeCodePointsArray(codePoints) {\n    const len = codePoints.length;\n    if (len <= MAX_ARGUMENTS_LENGTH) {\n      return String.fromCharCode.apply(String, codePoints); // avoid extra slice()\n    }\n\n    // Decode in chunks to avoid \"call stack size exceeded\".\n    let res = \"\";\n    let i = 0;\n    while (i < len) {\n      res += String.fromCharCode.apply(String, codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH));\n    }\n    return res;\n  }\n  function asciiSlice(buf, start, end) {\n    let ret = \"\";\n    end = Math.min(buf.length, end);\n    for (let i = start; i < end; ++i) {\n      ret += String.fromCharCode(buf[i] & 127);\n    }\n    return ret;\n  }\n  function latin1Slice(buf, start, end) {\n    let ret = \"\";\n    end = Math.min(buf.length, end);\n    for (let i = start; i < end; ++i) {\n      ret += String.fromCharCode(buf[i]);\n    }\n    return ret;\n  }\n  function hexSlice(buf, start, end) {\n    const len = buf.length;\n    if (!start || start < 0) start = 0;\n    if (!end || end < 0 || end > len) end = len;\n    let out = \"\";\n    for (let i = start; i < end; ++i) {\n      out += hexSliceLookupTable[buf[i]];\n    }\n    return out;\n  }\n  function utf16leSlice(buf, start, end) {\n    const bytes = buf.slice(start, end);\n    let res = \"\";\n    // If bytes.length is odd, the last 8 bits must be ignored (same as node.js)\n    for (let i = 0; i < bytes.length - 1; i += 2) {\n      res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256);\n    }\n    return res;\n  }\n  Buffer.prototype.slice = function slice(start, end) {\n    const len = this.length;\n    start = ~~start;\n    end = end === undefined ? len : ~~end;\n    if (start < 0) {\n      start += len;\n      if (start < 0) start = 0;\n    } else if (start > len) {\n      start = len;\n    }\n    if (end < 0) {\n      end += len;\n      if (end < 0) end = 0;\n    } else if (end > len) {\n      end = len;\n    }\n    if (end < start) end = start;\n    const newBuf = this.subarray(start, end);\n    // Return an augmented `Uint8Array` instance\n    Object.setPrototypeOf(newBuf, Buffer.prototype);\n    return newBuf;\n  };\n\n  /*\n   * Need to make sure that buffer isn't trying to write out of bounds.\n   */\n  function checkOffset(offset, ext, length) {\n    if (offset % 1 !== 0 || offset < 0) throw new RangeError(\"offset is not uint\");\n    if (offset + ext > length) throw new RangeError(\"Trying to access beyond buffer length\");\n  }\n  Buffer.prototype.readUintLE = Buffer.prototype.readUIntLE = function readUIntLE(offset, byteLength, noAssert) {\n    offset = offset >>> 0;\n    byteLength = byteLength >>> 0;\n    if (!noAssert) checkOffset(offset, byteLength, this.length);\n    let val = this[offset];\n    let mul = 1;\n    let i = 0;\n    while (++i < byteLength && (mul *= 256)) {\n      val += this[offset + i] * mul;\n    }\n    return val;\n  };\n  Buffer.prototype.readUintBE = Buffer.prototype.readUIntBE = function readUIntBE(offset, byteLength, noAssert) {\n    offset = offset >>> 0;\n    byteLength = byteLength >>> 0;\n    if (!noAssert) {\n      checkOffset(offset, byteLength, this.length);\n    }\n    let val = this[offset + --byteLength];\n    let mul = 1;\n    while (byteLength > 0 && (mul *= 256)) {\n      val += this[offset + --byteLength] * mul;\n    }\n    return val;\n  };\n  Buffer.prototype.readUint8 = Buffer.prototype.readUInt8 = function readUInt8(offset, noAssert) {\n    offset = offset >>> 0;\n    if (!noAssert) checkOffset(offset, 1, this.length);\n    return this[offset];\n  };\n  Buffer.prototype.readUint16LE = Buffer.prototype.readUInt16LE = function readUInt16LE(offset, noAssert) {\n    offset = offset >>> 0;\n    if (!noAssert) checkOffset(offset, 2, this.length);\n    return this[offset] | this[offset + 1] << 8;\n  };\n  Buffer.prototype.readUint16BE = Buffer.prototype.readUInt16BE = function readUInt16BE(offset, noAssert) {\n    offset = offset >>> 0;\n    if (!noAssert) checkOffset(offset, 2, this.length);\n    return this[offset] << 8 | this[offset + 1];\n  };\n  Buffer.prototype.readUint32LE = Buffer.prototype.readUInt32LE = function readUInt32LE(offset, noAssert) {\n    offset = offset >>> 0;\n    if (!noAssert) checkOffset(offset, 4, this.length);\n    return (this[offset] | this[offset + 1] << 8 | this[offset + 2] << 16) + this[offset + 3] * 16777216;\n  };\n  Buffer.prototype.readUint32BE = Buffer.prototype.readUInt32BE = function readUInt32BE(offset, noAssert) {\n    offset = offset >>> 0;\n    if (!noAssert) checkOffset(offset, 4, this.length);\n    return this[offset] * 16777216 + (this[offset + 1] << 16 | this[offset + 2] << 8 | this[offset + 3]);\n  };\n  Buffer.prototype.readBigUInt64LE = defineBigIntMethod(function readBigUInt64LE(offset) {\n    offset = offset >>> 0;\n    validateNumber(offset, \"offset\");\n    const first = this[offset];\n    const last = this[offset + 7];\n    if (first === undefined || last === undefined) {\n      boundsError(offset, this.length - 8);\n    }\n    const lo = first + this[++offset] * 2 ** 8 + this[++offset] * 2 ** 16 + this[++offset] * 2 ** 24;\n    const hi = this[++offset] + this[++offset] * 2 ** 8 + this[++offset] * 2 ** 16 + last * 2 ** 24;\n    return BigInt(lo) + (BigInt(hi) << BigInt(32));\n  });\n  Buffer.prototype.readBigUInt64BE = defineBigIntMethod(function readBigUInt64BE(offset) {\n    offset = offset >>> 0;\n    validateNumber(offset, \"offset\");\n    const first = this[offset];\n    const last = this[offset + 7];\n    if (first === undefined || last === undefined) {\n      boundsError(offset, this.length - 8);\n    }\n    const hi = first * 2 ** 24 + this[++offset] * 2 ** 16 + this[++offset] * 2 ** 8 + this[++offset];\n    const lo = this[++offset] * 2 ** 24 + this[++offset] * 2 ** 16 + this[++offset] * 2 ** 8 + last;\n    return (BigInt(hi) << BigInt(32)) + BigInt(lo);\n  });\n  Buffer.prototype.readIntLE = function readIntLE(offset, byteLength, noAssert) {\n    offset = offset >>> 0;\n    byteLength = byteLength >>> 0;\n    if (!noAssert) checkOffset(offset, byteLength, this.length);\n    let val = this[offset];\n    let mul = 1;\n    let i = 0;\n    while (++i < byteLength && (mul *= 256)) {\n      val += this[offset + i] * mul;\n    }\n    mul *= 128;\n    if (val >= mul) val -= Math.pow(2, 8 * byteLength);\n    return val;\n  };\n  Buffer.prototype.readIntBE = function readIntBE(offset, byteLength, noAssert) {\n    offset = offset >>> 0;\n    byteLength = byteLength >>> 0;\n    if (!noAssert) checkOffset(offset, byteLength, this.length);\n    let i = byteLength;\n    let mul = 1;\n    let val = this[offset + --i];\n    while (i > 0 && (mul *= 256)) {\n      val += this[offset + --i] * mul;\n    }\n    mul *= 128;\n    if (val >= mul) val -= Math.pow(2, 8 * byteLength);\n    return val;\n  };\n  Buffer.prototype.readInt8 = function readInt8(offset, noAssert) {\n    offset = offset >>> 0;\n    if (!noAssert) checkOffset(offset, 1, this.length);\n    if (!(this[offset] & 128)) return this[offset];\n    return (255 - this[offset] + 1) * -1;\n  };\n  Buffer.prototype.readInt16LE = function readInt16LE(offset, noAssert) {\n    offset = offset >>> 0;\n    if (!noAssert) checkOffset(offset, 2, this.length);\n    const val = this[offset] | this[offset + 1] << 8;\n    return val & 32768 ? val | 4294901760 : val;\n  };\n  Buffer.prototype.readInt16BE = function readInt16BE(offset, noAssert) {\n    offset = offset >>> 0;\n    if (!noAssert) checkOffset(offset, 2, this.length);\n    const val = this[offset + 1] | this[offset] << 8;\n    return val & 32768 ? val | 4294901760 : val;\n  };\n  Buffer.prototype.readInt32LE = function readInt32LE(offset, noAssert) {\n    offset = offset >>> 0;\n    if (!noAssert) checkOffset(offset, 4, this.length);\n    return this[offset] | this[offset + 1] << 8 | this[offset + 2] << 16 | this[offset + 3] << 24;\n  };\n  Buffer.prototype.readInt32BE = function readInt32BE(offset, noAssert) {\n    offset = offset >>> 0;\n    if (!noAssert) checkOffset(offset, 4, this.length);\n    return this[offset] << 24 | this[offset + 1] << 16 | this[offset + 2] << 8 | this[offset + 3];\n  };\n  Buffer.prototype.readBigInt64LE = defineBigIntMethod(function readBigInt64LE(offset) {\n    offset = offset >>> 0;\n    validateNumber(offset, \"offset\");\n    const first = this[offset];\n    const last = this[offset + 7];\n    if (first === undefined || last === undefined) {\n      boundsError(offset, this.length - 8);\n    }\n    const val = this[offset + 4] + this[offset + 5] * 2 ** 8 + this[offset + 6] * 2 ** 16 + (last << 24); // Overflow\n\n    return (BigInt(val) << BigInt(32)) + BigInt(first + this[++offset] * 2 ** 8 + this[++offset] * 2 ** 16 + this[++offset] * 2 ** 24);\n  });\n  Buffer.prototype.readBigInt64BE = defineBigIntMethod(function readBigInt64BE(offset) {\n    offset = offset >>> 0;\n    validateNumber(offset, \"offset\");\n    const first = this[offset];\n    const last = this[offset + 7];\n    if (first === undefined || last === undefined) {\n      boundsError(offset, this.length - 8);\n    }\n    const val = (first << 24) +\n    // Overflow\n    this[++offset] * 2 ** 16 + this[++offset] * 2 ** 8 + this[++offset];\n    return (BigInt(val) << BigInt(32)) + BigInt(this[++offset] * 2 ** 24 + this[++offset] * 2 ** 16 + this[++offset] * 2 ** 8 + last);\n  });\n  Buffer.prototype.readFloatLE = function readFloatLE(offset, noAssert) {\n    offset = offset >>> 0;\n    if (!noAssert) checkOffset(offset, 4, this.length);\n    return ieee754.read(this, offset, true, 23, 4);\n  };\n  Buffer.prototype.readFloatBE = function readFloatBE(offset, noAssert) {\n    offset = offset >>> 0;\n    if (!noAssert) checkOffset(offset, 4, this.length);\n    return ieee754.read(this, offset, false, 23, 4);\n  };\n  Buffer.prototype.readDoubleLE = function readDoubleLE(offset, noAssert) {\n    offset = offset >>> 0;\n    if (!noAssert) checkOffset(offset, 8, this.length);\n    return ieee754.read(this, offset, true, 52, 8);\n  };\n  Buffer.prototype.readDoubleBE = function readDoubleBE(offset, noAssert) {\n    offset = offset >>> 0;\n    if (!noAssert) checkOffset(offset, 8, this.length);\n    return ieee754.read(this, offset, false, 52, 8);\n  };\n  function checkInt(buf, value, offset, ext, max, min) {\n    if (!Buffer.isBuffer(buf)) throw new TypeError(\"\\\"buffer\\\" argument must be a Buffer instance\");\n    if (value > max || value < min) throw new RangeError(\"\\\"value\\\" argument is out of bounds\");\n    if (offset + ext > buf.length) throw new RangeError(\"Index out of range\");\n  }\n  Buffer.prototype.writeUintLE = Buffer.prototype.writeUIntLE = function writeUIntLE(value, offset, byteLength, noAssert) {\n    value = +value;\n    offset = offset >>> 0;\n    byteLength = byteLength >>> 0;\n    if (!noAssert) {\n      const maxBytes = Math.pow(2, 8 * byteLength) - 1;\n      checkInt(this, value, offset, byteLength, maxBytes, 0);\n    }\n    let mul = 1;\n    let i = 0;\n    this[offset] = value & 255;\n    while (++i < byteLength && (mul *= 256)) {\n      this[offset + i] = value / mul & 255;\n    }\n    return offset + byteLength;\n  };\n  Buffer.prototype.writeUintBE = Buffer.prototype.writeUIntBE = function writeUIntBE(value, offset, byteLength, noAssert) {\n    value = +value;\n    offset = offset >>> 0;\n    byteLength = byteLength >>> 0;\n    if (!noAssert) {\n      const maxBytes = Math.pow(2, 8 * byteLength) - 1;\n      checkInt(this, value, offset, byteLength, maxBytes, 0);\n    }\n    let i = byteLength - 1;\n    let mul = 1;\n    this[offset + i] = value & 255;\n    while (--i >= 0 && (mul *= 256)) {\n      this[offset + i] = value / mul & 255;\n    }\n    return offset + byteLength;\n  };\n  Buffer.prototype.writeUint8 = Buffer.prototype.writeUInt8 = function writeUInt8(value, offset, noAssert) {\n    value = +value;\n    offset = offset >>> 0;\n    if (!noAssert) checkInt(this, value, offset, 1, 255, 0);\n    this[offset] = value & 255;\n    return offset + 1;\n  };\n  Buffer.prototype.writeUint16LE = Buffer.prototype.writeUInt16LE = function writeUInt16LE(value, offset, noAssert) {\n    value = +value;\n    offset = offset >>> 0;\n    if (!noAssert) checkInt(this, value, offset, 2, 65535, 0);\n    this[offset] = value & 255;\n    this[offset + 1] = value >>> 8;\n    return offset + 2;\n  };\n  Buffer.prototype.writeUint16BE = Buffer.prototype.writeUInt16BE = function writeUInt16BE(value, offset, noAssert) {\n    value = +value;\n    offset = offset >>> 0;\n    if (!noAssert) checkInt(this, value, offset, 2, 65535, 0);\n    this[offset] = value >>> 8;\n    this[offset + 1] = value & 255;\n    return offset + 2;\n  };\n  Buffer.prototype.writeUint32LE = Buffer.prototype.writeUInt32LE = function writeUInt32LE(value, offset, noAssert) {\n    value = +value;\n    offset = offset >>> 0;\n    if (!noAssert) checkInt(this, value, offset, 4, 4294967295, 0);\n    this[offset + 3] = value >>> 24;\n    this[offset + 2] = value >>> 16;\n    this[offset + 1] = value >>> 8;\n    this[offset] = value & 255;\n    return offset + 4;\n  };\n  Buffer.prototype.writeUint32BE = Buffer.prototype.writeUInt32BE = function writeUInt32BE(value, offset, noAssert) {\n    value = +value;\n    offset = offset >>> 0;\n    if (!noAssert) checkInt(this, value, offset, 4, 4294967295, 0);\n    this[offset] = value >>> 24;\n    this[offset + 1] = value >>> 16;\n    this[offset + 2] = value >>> 8;\n    this[offset + 3] = value & 255;\n    return offset + 4;\n  };\n  function wrtBigUInt64LE(buf, value, offset, min, max) {\n    checkIntBI(value, min, max, buf, offset, 7);\n    let lo = Number(value & BigInt(4294967295));\n    buf[offset++] = lo;\n    lo = lo >> 8;\n    buf[offset++] = lo;\n    lo = lo >> 8;\n    buf[offset++] = lo;\n    lo = lo >> 8;\n    buf[offset++] = lo;\n    let hi = Number(value >> BigInt(32) & BigInt(4294967295));\n    buf[offset++] = hi;\n    hi = hi >> 8;\n    buf[offset++] = hi;\n    hi = hi >> 8;\n    buf[offset++] = hi;\n    hi = hi >> 8;\n    buf[offset++] = hi;\n    return offset;\n  }\n  function wrtBigUInt64BE(buf, value, offset, min, max) {\n    checkIntBI(value, min, max, buf, offset, 7);\n    let lo = Number(value & BigInt(4294967295));\n    buf[offset + 7] = lo;\n    lo = lo >> 8;\n    buf[offset + 6] = lo;\n    lo = lo >> 8;\n    buf[offset + 5] = lo;\n    lo = lo >> 8;\n    buf[offset + 4] = lo;\n    let hi = Number(value >> BigInt(32) & BigInt(4294967295));\n    buf[offset + 3] = hi;\n    hi = hi >> 8;\n    buf[offset + 2] = hi;\n    hi = hi >> 8;\n    buf[offset + 1] = hi;\n    hi = hi >> 8;\n    buf[offset] = hi;\n    return offset + 8;\n  }\n  Buffer.prototype.writeBigUInt64LE = defineBigIntMethod(function writeBigUInt64LE(value, offset = 0) {\n    return wrtBigUInt64LE(this, value, offset, BigInt(0), BigInt(\"0xffffffffffffffff\"));\n  });\n  Buffer.prototype.writeBigUInt64BE = defineBigIntMethod(function writeBigUInt64BE(value, offset = 0) {\n    return wrtBigUInt64BE(this, value, offset, BigInt(0), BigInt(\"0xffffffffffffffff\"));\n  });\n  Buffer.prototype.writeIntLE = function writeIntLE(value, offset, byteLength, noAssert) {\n    value = +value;\n    offset = offset >>> 0;\n    if (!noAssert) {\n      const limit = Math.pow(2, 8 * byteLength - 1);\n      checkInt(this, value, offset, byteLength, limit - 1, -limit);\n    }\n    let i = 0;\n    let mul = 1;\n    let sub = 0;\n    this[offset] = value & 255;\n    while (++i < byteLength && (mul *= 256)) {\n      if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n        sub = 1;\n      }\n      this[offset + i] = (value / mul >> 0) - sub & 255;\n    }\n    return offset + byteLength;\n  };\n  Buffer.prototype.writeIntBE = function writeIntBE(value, offset, byteLength, noAssert) {\n    value = +value;\n    offset = offset >>> 0;\n    if (!noAssert) {\n      const limit = Math.pow(2, 8 * byteLength - 1);\n      checkInt(this, value, offset, byteLength, limit - 1, -limit);\n    }\n    let i = byteLength - 1;\n    let mul = 1;\n    let sub = 0;\n    this[offset + i] = value & 255;\n    while (--i >= 0 && (mul *= 256)) {\n      if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n        sub = 1;\n      }\n      this[offset + i] = (value / mul >> 0) - sub & 255;\n    }\n    return offset + byteLength;\n  };\n  Buffer.prototype.writeInt8 = function writeInt8(value, offset, noAssert) {\n    value = +value;\n    offset = offset >>> 0;\n    if (!noAssert) checkInt(this, value, offset, 1, 127, -128);\n    if (value < 0) value = 255 + value + 1;\n    this[offset] = value & 255;\n    return offset + 1;\n  };\n  Buffer.prototype.writeInt16LE = function writeInt16LE(value, offset, noAssert) {\n    value = +value;\n    offset = offset >>> 0;\n    if (!noAssert) checkInt(this, value, offset, 2, 32767, -32768);\n    this[offset] = value & 255;\n    this[offset + 1] = value >>> 8;\n    return offset + 2;\n  };\n  Buffer.prototype.writeInt16BE = function writeInt16BE(value, offset, noAssert) {\n    value = +value;\n    offset = offset >>> 0;\n    if (!noAssert) checkInt(this, value, offset, 2, 32767, -32768);\n    this[offset] = value >>> 8;\n    this[offset + 1] = value & 255;\n    return offset + 2;\n  };\n  Buffer.prototype.writeInt32LE = function writeInt32LE(value, offset, noAssert) {\n    value = +value;\n    offset = offset >>> 0;\n    if (!noAssert) checkInt(this, value, offset, 4, 2147483647, -2147483648);\n    this[offset] = value & 255;\n    this[offset + 1] = value >>> 8;\n    this[offset + 2] = value >>> 16;\n    this[offset + 3] = value >>> 24;\n    return offset + 4;\n  };\n  Buffer.prototype.writeInt32BE = function writeInt32BE(value, offset, noAssert) {\n    value = +value;\n    offset = offset >>> 0;\n    if (!noAssert) checkInt(this, value, offset, 4, 2147483647, -2147483648);\n    if (value < 0) value = 4294967295 + value + 1;\n    this[offset] = value >>> 24;\n    this[offset + 1] = value >>> 16;\n    this[offset + 2] = value >>> 8;\n    this[offset + 3] = value & 255;\n    return offset + 4;\n  };\n  Buffer.prototype.writeBigInt64LE = defineBigIntMethod(function writeBigInt64LE(value, offset = 0) {\n    return wrtBigUInt64LE(this, value, offset, -BigInt(\"0x8000000000000000\"), BigInt(\"0x7fffffffffffffff\"));\n  });\n  Buffer.prototype.writeBigInt64BE = defineBigIntMethod(function writeBigInt64BE(value, offset = 0) {\n    return wrtBigUInt64BE(this, value, offset, -BigInt(\"0x8000000000000000\"), BigInt(\"0x7fffffffffffffff\"));\n  });\n  function checkIEEE754(buf, value, offset, ext, max, min) {\n    if (offset + ext > buf.length) throw new RangeError(\"Index out of range\");\n    if (offset < 0) throw new RangeError(\"Index out of range\");\n  }\n  function writeFloat(buf, value, offset, littleEndian, noAssert) {\n    value = +value;\n    offset = offset >>> 0;\n    if (!noAssert) {\n      checkIEEE754(buf, value, offset, 4);\n    }\n    ieee754.write(buf, value, offset, littleEndian, 23, 4);\n    return offset + 4;\n  }\n  Buffer.prototype.writeFloatLE = function writeFloatLE(value, offset, noAssert) {\n    return writeFloat(this, value, offset, true, noAssert);\n  };\n  Buffer.prototype.writeFloatBE = function writeFloatBE(value, offset, noAssert) {\n    return writeFloat(this, value, offset, false, noAssert);\n  };\n  function writeDouble(buf, value, offset, littleEndian, noAssert) {\n    value = +value;\n    offset = offset >>> 0;\n    if (!noAssert) {\n      checkIEEE754(buf, value, offset, 8);\n    }\n    ieee754.write(buf, value, offset, littleEndian, 52, 8);\n    return offset + 8;\n  }\n  Buffer.prototype.writeDoubleLE = function writeDoubleLE(value, offset, noAssert) {\n    return writeDouble(this, value, offset, true, noAssert);\n  };\n  Buffer.prototype.writeDoubleBE = function writeDoubleBE(value, offset, noAssert) {\n    return writeDouble(this, value, offset, false, noAssert);\n  };\n\n  // copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\n  Buffer.prototype.copy = function copy(target, targetStart, start, end) {\n    if (!Buffer.isBuffer(target)) throw new TypeError(\"argument should be a Buffer\");\n    if (!start) start = 0;\n    if (!end && end !== 0) end = this.length;\n    if (targetStart >= target.length) targetStart = target.length;\n    if (!targetStart) targetStart = 0;\n    if (end > 0 && end < start) end = start;\n\n    // Copy 0 bytes; we're done\n    if (end === start) return 0;\n    if (target.length === 0 || this.length === 0) return 0;\n\n    // Fatal error conditions\n    if (targetStart < 0) {\n      throw new RangeError(\"targetStart out of bounds\");\n    }\n    if (start < 0 || start >= this.length) throw new RangeError(\"Index out of range\");\n    if (end < 0) throw new RangeError(\"sourceEnd out of bounds\");\n\n    // Are we oob?\n    if (end > this.length) end = this.length;\n    if (target.length - targetStart < end - start) {\n      end = target.length - targetStart + start;\n    }\n    const len = end - start;\n    if (this === target && typeof Uint8Array.prototype.copyWithin === \"function\") {\n      // Use built-in when available, missing from IE11\n      this.copyWithin(targetStart, start, end);\n    } else {\n      Uint8Array.prototype.set.call(target, this.subarray(start, end), targetStart);\n    }\n    return len;\n  };\n\n  // Usage:\n  //    buffer.fill(number[, offset[, end]])\n  //    buffer.fill(buffer[, offset[, end]])\n  //    buffer.fill(string[, offset[, end]][, encoding])\n  Buffer.prototype.fill = function fill(val, start, end, encoding) {\n    // Handle string cases:\n    if (typeof val === \"string\") {\n      if (typeof start === \"string\") {\n        encoding = start;\n        start = 0;\n        end = this.length;\n      } else if (typeof end === \"string\") {\n        encoding = end;\n        end = this.length;\n      }\n      if (encoding !== undefined && typeof encoding !== \"string\") {\n        throw new TypeError(\"encoding must be a string\");\n      }\n      if (typeof encoding === \"string\" && !Buffer.isEncoding(encoding)) {\n        throw new TypeError(\"Unknown encoding: \" + encoding);\n      }\n      if (val.length === 1) {\n        const code = val.charCodeAt(0);\n        if (encoding === \"utf8\" && code < 128 || encoding === \"latin1\") {\n          // Fast path: If `val` fits into a single byte, use that numeric value.\n          val = code;\n        }\n      }\n    } else if (typeof val === \"number\") {\n      val = val & 255;\n    } else if (typeof val === \"boolean\") {\n      val = Number(val);\n    }\n\n    // Invalid ranges are not set to a default, so can range check early.\n    if (start < 0 || this.length < start || this.length < end) {\n      throw new RangeError(\"Out of range index\");\n    }\n    if (end <= start) {\n      return this;\n    }\n    start = start >>> 0;\n    end = end === undefined ? this.length : end >>> 0;\n    if (!val) val = 0;\n    let i;\n    if (typeof val === \"number\") {\n      for (i = start; i < end; ++i) {\n        this[i] = val;\n      }\n    } else {\n      const bytes = Buffer.isBuffer(val) ? val : Buffer.from(val, encoding);\n      const len = bytes.length;\n      if (len === 0) {\n        throw new TypeError(\"The value \\\"\" + val + \"\\\" is invalid for argument \\\"value\\\"\");\n      }\n      for (i = 0; i < end - start; ++i) {\n        this[i + start] = bytes[i % len];\n      }\n    }\n    return this;\n  };\n\n  // CUSTOM ERRORS\n  // =============\n\n  // Simplified versions from Node, changed for Buffer-only usage\n  const errors = {};\n  function E(sym, getMessage, Base) {\n    errors[sym] = class NodeError extends Base {\n      constructor() {\n        super();\n        Object.defineProperty(this, \"message\", {\n          value: getMessage.apply(this, arguments),\n          writable: true,\n          configurable: true\n        });\n\n        // Add the error code to the name to include it in the stack trace.\n        this.name = `${this.name} [${sym}]`;\n        // Access the stack to generate the error message including the error code\n        // from the name.\n        this.stack; // eslint-disable-line no-unused-expressions\n        // Reset the name to the actual name.\n        delete this.name;\n      }\n      get code() {\n        return sym;\n      }\n      set code(value) {\n        Object.defineProperty(this, \"code\", {\n          configurable: true,\n          enumerable: true,\n          value,\n          writable: true\n        });\n      }\n      toString() {\n        return `${this.name} [${sym}]: ${this.message}`;\n      }\n    };\n  }\n  E(\"ERR_BUFFER_OUT_OF_BOUNDS\", function (name) {\n    if (name) {\n      return `${name} is outside of buffer bounds`;\n    }\n    return \"Attempt to access memory outside buffer bounds\";\n  }, RangeError);\n  E(\"ERR_INVALID_ARG_TYPE\", function (name, actual) {\n    return `The \"${name}\" argument must be of type number. Received type ${typeof actual}`;\n  }, TypeError);\n  E(\"ERR_OUT_OF_RANGE\", function (str, range, input) {\n    let msg = `The value of \"${str}\" is out of range.`;\n    let received = input;\n    if (Number.isInteger(input) && Math.abs(input) > 2 ** 32) {\n      received = addNumericalSeparator(String(input));\n    } else if (typeof input === \"bigint\") {\n      received = String(input);\n      if (input > BigInt(2) ** BigInt(32) || input < -(BigInt(2) ** BigInt(32))) {\n        received = addNumericalSeparator(received);\n      }\n      received += \"n\";\n    }\n    msg += ` It must be ${range}. Received ${received}`;\n    return msg;\n  }, RangeError);\n  function addNumericalSeparator(val) {\n    let res = \"\";\n    let i = val.length;\n    const start = val[0] === \"-\" ? 1 : 0;\n    for (; i >= start + 4; i -= 3) {\n      res = `_${val.slice(i - 3, i)}${res}`;\n    }\n    return `${val.slice(0, i)}${res}`;\n  }\n\n  // CHECK FUNCTIONS\n  // ===============\n\n  function checkBounds(buf, offset, byteLength) {\n    validateNumber(offset, \"offset\");\n    if (buf[offset] === undefined || buf[offset + byteLength] === undefined) {\n      boundsError(offset, buf.length - (byteLength + 1));\n    }\n  }\n  function checkIntBI(value, min, max, buf, offset, byteLength) {\n    if (value > max || value < min) {\n      const n = typeof min === \"bigint\" ? \"n\" : \"\";\n      let range;\n      {\n        if (min === 0 || min === BigInt(0)) {\n          range = `>= 0${n} and < 2${n} ** ${(byteLength + 1) * 8}${n}`;\n        } else {\n          range = `>= -(2${n} ** ${(byteLength + 1) * 8 - 1}${n}) and < 2 ** ` + `${(byteLength + 1) * 8 - 1}${n}`;\n        }\n      }\n      throw new errors.ERR_OUT_OF_RANGE(\"value\", range, value);\n    }\n    checkBounds(buf, offset, byteLength);\n  }\n  function validateNumber(value, name) {\n    if (typeof value !== \"number\") {\n      throw new errors.ERR_INVALID_ARG_TYPE(name, \"number\", value);\n    }\n  }\n  function boundsError(value, length, type) {\n    if (Math.floor(value) !== value) {\n      validateNumber(value, type);\n      throw new errors.ERR_OUT_OF_RANGE(\"offset\", \"an integer\", value);\n    }\n    if (length < 0) {\n      throw new errors.ERR_BUFFER_OUT_OF_BOUNDS();\n    }\n    throw new errors.ERR_OUT_OF_RANGE(\"offset\", `>= ${0} and <= ${length}`, value);\n  }\n\n  // HELPER FUNCTIONS\n  // ================\n\n  const INVALID_BASE64_RE = /[^+/0-9A-Za-z-_]/g;\n  function base64clean(str) {\n    // Node takes equal signs as end of the Base64 encoding\n    str = str.split(\"=\")[0];\n    // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n    str = str.trim().replace(INVALID_BASE64_RE, \"\");\n    // Node converts strings with length < 2 to ''\n    if (str.length < 2) return \"\";\n    // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n    while (str.length % 4 !== 0) {\n      str = str + \"=\";\n    }\n    return str;\n  }\n  function utf8ToBytes(string, units) {\n    units = units || Infinity;\n    let codePoint;\n    const length = string.length;\n    let leadSurrogate = null;\n    const bytes = [];\n    for (let i = 0; i < length; ++i) {\n      codePoint = string.charCodeAt(i);\n\n      // is surrogate component\n      if (codePoint > 55295 && codePoint < 57344) {\n        // last char was a lead\n        if (!leadSurrogate) {\n          // no lead yet\n          if (codePoint > 56319) {\n            // unexpected trail\n            if ((units -= 3) > -1) bytes.push(239, 191, 189);\n            continue;\n          } else if (i + 1 === length) {\n            // unpaired lead\n            if ((units -= 3) > -1) bytes.push(239, 191, 189);\n            continue;\n          }\n\n          // valid lead\n          leadSurrogate = codePoint;\n          continue;\n        }\n\n        // 2 leads in a row\n        if (codePoint < 56320) {\n          if ((units -= 3) > -1) bytes.push(239, 191, 189);\n          leadSurrogate = codePoint;\n          continue;\n        }\n\n        // valid surrogate pair\n        codePoint = (leadSurrogate - 55296 << 10 | codePoint - 56320) + 65536;\n      } else if (leadSurrogate) {\n        // valid bmp char, but last char was a lead\n        if ((units -= 3) > -1) bytes.push(239, 191, 189);\n      }\n      leadSurrogate = null;\n\n      // encode utf8\n      if (codePoint < 128) {\n        if ((units -= 1) < 0) break;\n        bytes.push(codePoint);\n      } else if (codePoint < 2048) {\n        if ((units -= 2) < 0) break;\n        bytes.push(codePoint >> 6 | 192, codePoint & 63 | 128);\n      } else if (codePoint < 65536) {\n        if ((units -= 3) < 0) break;\n        bytes.push(codePoint >> 12 | 224, codePoint >> 6 & 63 | 128, codePoint & 63 | 128);\n      } else if (codePoint < 1114112) {\n        if ((units -= 4) < 0) break;\n        bytes.push(codePoint >> 18 | 240, codePoint >> 12 & 63 | 128, codePoint >> 6 & 63 | 128, codePoint & 63 | 128);\n      } else {\n        throw new Error(\"Invalid code point\");\n      }\n    }\n    return bytes;\n  }\n  function asciiToBytes(str) {\n    const byteArray = [];\n    for (let i = 0; i < str.length; ++i) {\n      // Node's code seems to be doing this and not & 0x7F..\n      byteArray.push(str.charCodeAt(i) & 255);\n    }\n    return byteArray;\n  }\n  function utf16leToBytes(str, units) {\n    let c, hi, lo;\n    const byteArray = [];\n    for (let i = 0; i < str.length; ++i) {\n      if ((units -= 2) < 0) break;\n      c = str.charCodeAt(i);\n      hi = c >> 8;\n      lo = c % 256;\n      byteArray.push(lo);\n      byteArray.push(hi);\n    }\n    return byteArray;\n  }\n  function base64ToBytes(str) {\n    return base64.toByteArray(base64clean(str));\n  }\n  function blitBuffer(src, dst, offset, length) {\n    let i;\n    for (i = 0; i < length; ++i) {\n      if (i + offset >= dst.length || i >= src.length) break;\n      dst[i + offset] = src[i];\n    }\n    return i;\n  }\n\n  // ArrayBuffer or Uint8Array objects from other contexts (i.e. iframes) do not pass\n  // the `instanceof` check but they should be treated as of that type.\n  // See: https://github.com/feross/buffer/issues/166\n  function isInstance(obj, type) {\n    return obj instanceof type || obj != null && obj.constructor != null && obj.constructor.name != null && obj.constructor.name === type.name;\n  }\n  function numberIsNaN(obj) {\n    // For IE11 support\n    return obj !== obj; // eslint-disable-line no-self-compare\n  }\n\n  // Create lookup table for `toString('hex')`\n  // See: https://github.com/feross/buffer/issues/219\n  const hexSliceLookupTable = function () {\n    const alphabet = \"0123456789abcdef\";\n    const table = new Array(256);\n    for (let i = 0; i < 16; ++i) {\n      const i16 = i * 16;\n      for (let j = 0; j < 16; ++j) {\n        table[i16 + j] = alphabet[i] + alphabet[j];\n      }\n    }\n    return table;\n  }();\n\n  // Return not function with Error if BigInt not supported\n  function defineBigIntMethod(fn) {\n    return typeof BigInt === \"undefined\" ? BufferBigIntNotDefined : fn;\n  }\n  function BufferBigIntNotDefined() {\n    throw new Error(\"BigInt not supported\");\n  }\n  return exports;\n}\n\nexport { dew as d };\n","import { d as dew } from './chunk-DtuTasat.js';\n\nconst exports = dew();\nexports['Buffer']; exports['SlowBuffer']; exports['INSPECT_MAX_BYTES']; exports['kMaxLength'];\n\nvar Buffer = exports.Buffer;\r\nvar INSPECT_MAX_BYTES = exports.INSPECT_MAX_BYTES;\r\nvar kMaxLength = exports.kMaxLength;\n\nexport { Buffer, INSPECT_MAX_BYTES, exports as default, kMaxLength };\n","import {\r\n    elizaLogger,\r\n    type ActionExample,\r\n    type Content,\r\n    type HandlerCallback,\r\n    type IAgentRuntime,\r\n    type Memory,\r\n    ModelClass,\r\n    type State,\r\n    composeContext,\r\n    generateObject,\r\n    type Action,\r\n} from \"@elizaos/core\";\r\nimport { WalletProvider } from \"../providers/wallet\";\r\nimport { validateMultiversxConfig } from \"../environment\";\r\nimport { transferSchema } from \"../utils/schemas\";\r\nimport { GraphqlProvider } from \"../providers/graphql\";\r\nimport { MVX_NETWORK_CONFIG } from \"../constants\";\r\nimport { NativeAuthProvider } from \"../providers/nativeAuth\";\r\nimport { getToken } from \"../utils/getToken\";\r\nexport interface TransferContent extends Content {\r\n    tokenAddress: string;\r\n    amount: string;\r\n    tokenIdentifier?: string;\r\n}\r\nimport { isUserAuthorized } from \"../utils/accessTokenManagement\";\r\n\r\nconst transferTemplate = `Respond with a JSON markdown block containing only the extracted values. Use null for any values that cannot be determined.\r\n\r\nExample response:\r\n\\`\\`\\`json\r\n{\r\n    \"tokenAddress\": \"erd12r22hx2q4jjt8e0gukxt5shxqjp9ys5nwdtz0gpds25zf8qwtjdqyzfgzm\",\r\n    \"amount\": \"1\",\r\n    \"tokenIdentifier\": \"PEPE-3eca7c\"\r\n}\r\n\\`\\`\\`\r\n\r\n{{recentMessages}}\r\n\r\nGiven the recent messages, extract the following information about the requested token transfer:\r\n- Token address\r\n- Amount to transfer\r\n- Token identifier\r\n\r\nRespond with a JSON markdown block containing only the extracted values.`;\r\n\r\nexport default {\r\n    name: \"SEND_TOKEN\",\r\n    similes: [\r\n        \"TRANSFER_TOKEN\",\r\n        \"TRANSFER_TOKENS\",\r\n        \"SEND_TOKENS\",\r\n        \"SEND_EGLD\",\r\n        \"PAY\",\r\n    ],\r\n    validate: async (runtime: IAgentRuntime, message: Memory) => {\r\n        elizaLogger.log(\"Validating config for user:\", message.userId);\r\n        await validateMultiversxConfig(runtime);\r\n        return true;\r\n    },\r\n    description: \"Transfer tokens from the agent wallet to another address\",\r\n    handler: async (\r\n        runtime: IAgentRuntime,\r\n        message: Memory,\r\n        state: State,\r\n        _options: { [key: string]: unknown },\r\n        callback?: HandlerCallback,\r\n    ) => {\r\n        elizaLogger.log(\"Starting SEND_TOKEN handler...\");\r\n\r\n        elizaLogger.log(\"Handler initialized. Checking user authorization...\");\r\n\r\n        if (!isUserAuthorized(message.userId, runtime)) {\r\n            elizaLogger.error(\r\n                \"Unauthorized user attempted to transfer a token:\",\r\n                message.userId\r\n            );\r\n            if (callback) {\r\n                callback({\r\n                    text: \"You do not have permission to transfer a token.\",\r\n                    content: { error: \"Unauthorized user\" },\r\n                });\r\n            }\r\n            return false;\r\n        }\r\n\r\n        // Initialize or update state\r\n        // if (!state) {\r\n        //     state = (await runtime.composeState(message)) as State;\r\n        // } else {\r\n        //     state = await runtime.updateRecentMessageState(state);\r\n        // }\r\n\r\n        let currentState: State;\r\n        if (!state) {\r\n            currentState = (await runtime.composeState(message)) as State;\r\n        } else {\r\n            currentState = await runtime.updateRecentMessageState(state);\r\n        }\r\n\r\n        // Compose transfer context\r\n        const transferContext = composeContext({\r\n            state: currentState,\r\n            template: transferTemplate,\r\n        });\r\n\r\n        // Generate transfer content\r\n        const content = await generateObject({\r\n            runtime,\r\n            context: transferContext,\r\n            modelClass: ModelClass.SMALL,\r\n            schema: transferSchema,\r\n        });\r\n\r\n        const transferContent = content.object as TransferContent;\r\n        const isTransferContent =\r\n            typeof transferContent.tokenAddress === \"string\" &&\r\n            typeof transferContent.amount === \"string\";\r\n\r\n        // Validate transfer content\r\n        if (!isTransferContent) {\r\n            elizaLogger.error(\"Invalid content for TRANSFER_TOKEN action.\");\r\n            if (callback) {\r\n                callback({\r\n                    text: \"Unable to process transfer request. Invalid content provided.\",\r\n                    content: { error: \"Invalid transfer content\" },\r\n                });\r\n            }\r\n            return false;\r\n        }\r\n\r\n        try {\r\n            const privateKey = runtime.getSetting(\"MVX_PRIVATE_KEY\");\r\n            const network = runtime.getSetting(\"MVX_NETWORK\");\r\n            const networkConfig = MVX_NETWORK_CONFIG[network];\r\n\r\n            const walletProvider = new WalletProvider(privateKey, network);\r\n\r\n            if (\r\n                transferContent.tokenIdentifier &&\r\n                transferContent.tokenIdentifier.toLowerCase() !== \"egld\"\r\n            ) {\r\n                const [ticker, nonce] =\r\n                    transferContent.tokenIdentifier.split(\"-\");\r\n\r\n                let identifier = transferContent.tokenIdentifier;\r\n                if (!nonce) {\r\n                    const nativeAuthProvider = new NativeAuthProvider({\r\n                        apiUrl: networkConfig.apiURL,\r\n                    });\r\n\r\n                    await nativeAuthProvider.initializeClient();\r\n\r\n                    const accessToken =\r\n                        await nativeAuthProvider.getAccessToken(walletProvider);\r\n\r\n                    const graphqlProvider = new GraphqlProvider(\r\n                        networkConfig.graphURL,\r\n                        { Authorization: `Bearer ${accessToken}` },\r\n                    );\r\n\r\n                    const token = await getToken({\r\n                        provider: graphqlProvider,\r\n                        ticker,\r\n                    });\r\n\r\n                    identifier = token.identifier;\r\n                }\r\n\r\n                const txHash = await walletProvider.sendESDT({\r\n                    receiverAddress: transferContent.tokenAddress,\r\n                    amount: transferContent.amount,\r\n                    identifier,\r\n                });\r\n\r\n                const txURL = walletProvider.getTransactionURL(txHash);\r\n                callback?.({\r\n                    text: `Transaction sent successfully! You can view it here: ${txURL}.`,\r\n                });\r\n\r\n                return true;\r\n            }\r\n\r\n            const txHash = await walletProvider.sendEGLD({\r\n                receiverAddress: transferContent.tokenAddress,\r\n                amount: transferContent.amount,\r\n            });\r\n\r\n            const txURL = walletProvider.getTransactionURL(txHash);\r\n            callback?.({\r\n                text: `Transaction sent successfully! You can view it here: ${txURL}.`,\r\n            });\r\n\r\n            return true;\r\n        } catch (error) {\r\n            elizaLogger.error(\"Error during token transfer:\", error);\r\n            callback?.({\r\n                text: error.message,\r\n                content: { error: error.message },\r\n            });\r\n\r\n            return \"\";\r\n        }\r\n    },\r\n\r\n    examples: [\r\n        [\r\n            {\r\n                user: \"{{user1}}\",\r\n                content: {\r\n                    text: \"Send 1 EGLD to erd12r22hx2q4jjt8e0gukxt5shxqjp9ys5nwdtz0gpds25zf8qwtjdqyzfgzm\",\r\n                },\r\n            },\r\n            {\r\n                user: \"{{user2}}\",\r\n                content: {\r\n                    text: \"I'll send 1 EGLD tokens now...\",\r\n                    action: \"SEND_TOKEN\",\r\n                },\r\n            },\r\n        ],\r\n        [\r\n            {\r\n                user: \"{{user1}}\",\r\n                content: {\r\n                    text: \"Send 1 TST-a8b23d to erd12r22hx2q4jjt8e0gukxt5shxqjp9ys5nwdtz0gpds25zf8qwtjdqyzfgzm\",\r\n                },\r\n            },\r\n            {\r\n                user: \"{{user2}}\",\r\n                content: {\r\n                    text: \"I'll send 1 TST-a8b23d tokens now...\",\r\n                    action: \"SEND_TOKEN\",\r\n                },\r\n            },\r\n        ],\r\n    ] as ActionExample[][],\r\n} as Action;\r\n","import { elizaLogger } from \"@elizaos/core\";\r\nimport {\r\n    UserSigner,\r\n    Address,\r\n    TransactionComputer,\r\n    MessageComputer,\r\n    ApiNetworkProvider,\r\n    UserSecretKey,\r\n    TokenTransfer,\r\n    TransferTransactionsFactory,\r\n    TransactionsFactoryConfig,\r\n    Token,\r\n    type Transaction,\r\n    TokenManagementTransactionsFactory,\r\n    Message,\r\n    AccountOnNetwork,\r\n    FungibleTokenOfAccountOnNetwork,\r\n} from \"@multiversx/sdk-core\";\r\nimport { denominateAmount, getRawAmount } from \"../utils/amount\";\r\nimport { MVX_NETWORK_CONFIG } from \"../constants\";\r\n\r\n// WalletProvider class handles wallet-related operations, such as signing transactions, retrieving balance, and sending tokens\r\nexport class WalletProvider {\r\n    private signer: UserSigner; // Handles cryptographic signing\r\n    private apiNetworkProvider: ApiNetworkProvider; // Interacts with the MultiversX network\r\n    private chainID: string; // Current network chain ID\r\n    private explorerURL: string; // Current network explorer URL\r\n    private minEGLD = 0.0005; // Minimum balance for EGLD, in order to cover gas fees\r\n\r\n    /**\r\n     * Constructor to initialize WalletProvider with a private key and network configuration\r\n     * @param privateKey - User's private key for signing transactions\r\n     * @param network - Target network (mainnet, devnet, or testnet)\r\n     */\r\n    constructor(privateKey: string, network: string) {\r\n        if (!MVX_NETWORK_CONFIG[network]) {\r\n            throw new Error(`Unsupported network: ${network}`); // Validate network\r\n        }\r\n\r\n        const networkConfig = MVX_NETWORK_CONFIG[network];\r\n        this.chainID = networkConfig.chainID;\r\n        this.explorerURL = networkConfig.explorerURL;\r\n\r\n        // Initialize the signer with the user's private key\r\n        const secretKey = UserSecretKey.fromString(privateKey);\r\n        this.signer = new UserSigner(secretKey);\r\n\r\n        // Set up the network provider for API interactions\r\n        this.apiNetworkProvider = new ApiNetworkProvider(networkConfig.apiURL, {\r\n            clientName: \"eliza-mvx\",\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Retrieve the wallet address derived from the private key\r\n     * @returns Address object\r\n     */\r\n    public getAddress(): Address {\r\n        return this.signer.getAddress();\r\n    }\r\n\r\n    /**\r\n     * Fetch the wallet's current EGLD balance\r\n     * @returns Promise resolving to the wallet's balance as a string\r\n     */\r\n    public async getBalance(): Promise<string> {\r\n        const address = new Address(this.getAddress());\r\n        const account = await this.getAccount(address);\r\n        return account.balance.toString(); // Return balance as a string\r\n    }\r\n\r\n    /**\r\n     * Fetch the wallet's current EGLD balance\r\n     * @returns Promise resolving to the wallet's balance as a string\r\n     */\r\n    public async getFungibleBalance(token: string): Promise<string> {\r\n        const data = await this.getTokenData(token);\r\n        const { balance, rawResponse } = data;\r\n        const amount = getRawAmount({\r\n            amount: balance.toString(),\r\n            decimals: rawResponse.decimals,\r\n        });\r\n\r\n        return amount;\r\n    }\r\n\r\n    /**\r\n     * Sign a transaction using the wallet's private key\r\n     * @param transaction - The transaction object to sign\r\n     * @returns The transaction signature as a string\r\n     */\r\n    public async signTransaction(transaction: Transaction) {\r\n        const computer = new TransactionComputer();\r\n        const serializedTx = computer.computeBytesForSigning(transaction); // Prepare transaction for signing\r\n        const signature = await this.signer.sign(serializedTx); // Sign the transaction\r\n        return signature;\r\n    }\r\n\r\n    /**\r\n     * Send EGLD tokens to another wallet\r\n     * @param receiverAddress - Recipient's wallet address\r\n     * @param amount - Amount of EGLD to send\r\n     * @returns Transaction hash as a string\r\n     */\r\n    public async sendEGLD({\r\n        receiverAddress,\r\n        amount,\r\n    }: {\r\n        receiverAddress: string;\r\n        amount: string;\r\n    }): Promise<string> {\r\n        try {\r\n            const hasEgldBalance = await this.hasEgldBalance(amount);\r\n\r\n            if (!hasEgldBalance) {\r\n                throw new Error(\"Insufficient balance.\");\r\n            }\r\n\r\n            const receiver = new Address(receiverAddress);\r\n            const value = denominateAmount({ amount, decimals: 18 }); // Convert amount to the smallest unit\r\n            const senderAddress = this.getAddress();\r\n\r\n            // Prepare the transaction factory with the current chain ID\r\n            const factoryConfig = new TransactionsFactoryConfig({\r\n                chainID: this.chainID,\r\n            });\r\n            const factory = new TransferTransactionsFactory({\r\n                config: factoryConfig,\r\n            });\r\n\r\n            // Create a native EGLD transfer transaction\r\n            const transaction = factory.createTransactionForNativeTokenTransfer(\r\n                {\r\n                    sender: this.getAddress(),\r\n                    receiver: receiver,\r\n                    nativeAmount: BigInt(value),\r\n                },\r\n            );\r\n\r\n            // Get the sender's account details to set the nonce\r\n            const account = await this.getAccount(senderAddress);\r\n            transaction.nonce = BigInt(account.nonce);\r\n\r\n            // Sign the transaction\r\n            const signature = await this.signTransaction(transaction);\r\n            transaction.signature = signature;\r\n\r\n            // Broadcast the transaction to the network\r\n            const txHash = await this.sendTransaction(transaction);\r\n\r\n            elizaLogger.log(`TxHash: ${txHash}`); // Log transaction hash\r\n            elizaLogger.log(\r\n                `Transaction URL: ${this.explorerURL}/transactions/${txHash}`,\r\n            ); // View Transaction\r\n            return txHash;\r\n        } catch (error) {\r\n            console.error(\"Error sending EGLD transaction:\", error);\r\n            throw new Error(\r\n                `Failed to send EGLD: ${error.message || \"Unknown error\"}`,\r\n            );\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Send ESDT (eStandard Digital Token) tokens to another wallet\r\n     * @param receiverAddress - Recipient's wallet address\r\n     * @param amount - Amount of ESDT to send\r\n     * @param identifier - ESDT token identifier (e.g., PEPE-3eca7c)\r\n     * @returns Transaction hash as a string\r\n     */\r\n    public async sendESDT({\r\n        receiverAddress,\r\n        amount,\r\n        identifier,\r\n    }: {\r\n        receiverAddress: string;\r\n        amount: string;\r\n        identifier: string;\r\n    }): Promise<string> {\r\n        try {\r\n            const hasEgldBalance = await this.hasEgldBalance();\r\n\r\n            if (!hasEgldBalance) {\r\n                throw new Error(\r\n                    `Insufficient balance, wallet should have a minimum of ${this.minEGLD} EGLD`,\r\n                );\r\n            }\r\n\r\n            const tokenBalance = await this.getFungibleBalance(identifier);\r\n\r\n            const tokenBalanceNum = Number(tokenBalance);\r\n            const transferAmountNum = Number(amount);\r\n\r\n            // Perform the calculation and comparison\r\n            const hasBalance =\r\n                tokenBalanceNum >= tokenBalanceNum - transferAmountNum;\r\n\r\n            if (!hasBalance) {\r\n                throw new Error(\"Insufficient balance for token transfer\");\r\n            }\r\n\r\n            // Set up transaction factory for ESDT transfers\r\n            const config = new TransactionsFactoryConfig({\r\n                chainID: this.chainID,\r\n            });\r\n            const factory = new TransferTransactionsFactory({ config });\r\n\r\n            // Retrieve token details to determine the token's decimals\r\n            const token = await this.getTokenData(identifier);\r\n\r\n            // Convert amount to the token's smallest unit\r\n            const value = denominateAmount({\r\n                amount,\r\n                decimals: token.rawResponse.decimals,\r\n            });\r\n\r\n            const address = this.getAddress();\r\n\r\n            // Create an ESDT transfer transaction\r\n            const transaction = factory.createTransactionForESDTTokenTransfer({\r\n                sender: address,\r\n                receiver: new Address(receiverAddress),\r\n                tokenTransfers: [\r\n                    new TokenTransfer({\r\n                        token: new Token({ identifier }),\r\n                        amount: BigInt(value),\r\n                    }),\r\n                ],\r\n            });\r\n\r\n            // Set the transaction nonce\r\n            const account = await this.getAccount(address);\r\n            transaction.nonce = BigInt(account.nonce);\r\n\r\n            // Sign and broadcast the transaction\r\n            const signature = await this.signTransaction(transaction);\r\n            transaction.signature = signature;\r\n            const txHash = await this.sendTransaction(transaction);\r\n\r\n            const transactionURL = this.getTransactionURL(txHash);\r\n            elizaLogger.log(`TxHash: ${txHash}`); // Log transaction hash\r\n            elizaLogger.log(`Transaction URL: ${transactionURL}`); // View Transaction\r\n            return txHash;\r\n        } catch (error) {\r\n            console.error(\"Error sending ESDT transaction:\", error);\r\n            throw new Error(\r\n                `Failed to send ESDT: ${error.message || \"Unknown error\"}`,\r\n            );\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Create a new eStandard Digital Token (ESDT).\r\n     * @param tokenName - The name of the token to be created.\r\n     * @param tokenTicker - The ticker symbol for the token.\r\n     * @param amount - The initial supply of the token.\r\n     * @param decimals - The number of decimal places for the token.\r\n     * @returns The transaction hash of the created ESDT.\r\n     */\r\n    public async createESDT({\r\n        tokenName,\r\n        tokenTicker,\r\n        amount,\r\n        decimals,\r\n    }: {\r\n        tokenName: string;\r\n        tokenTicker: string;\r\n        amount: string;\r\n        decimals: number;\r\n    }): Promise<string> {\r\n        try {\r\n            const hasEgldBalance = await this.hasEgldBalance();\r\n\r\n            if (!hasEgldBalance) {\r\n                throw new Error(\r\n                    `Insufficient balance, wallet should have a minimum of ${this.minEGLD} EGLD`,\r\n                );\r\n            }\r\n\r\n            const factoryConfig = new TransactionsFactoryConfig({\r\n                chainID: this.chainID, // Set the chain ID for the transaction factory\r\n            });\r\n            const factory = new TokenManagementTransactionsFactory({\r\n                config: factoryConfig, // Initialize the factory with the configuration\r\n            });\r\n\r\n            const totalSupply = denominateAmount({ amount, decimals });\r\n            const address = this.getAddress(); // Retrieve the sender's address\r\n\r\n            // Create a transaction for issuing a fungible token\r\n            const transaction = factory.createTransactionForIssuingFungible({\r\n                sender: address, // Specify the sender's address\r\n                tokenName, // Name of the token\r\n                tokenTicker: tokenTicker.toUpperCase(), // Token ticker in uppercase\r\n                initialSupply: BigInt(totalSupply), // Initial supply as a BigInt\r\n                numDecimals: BigInt(decimals), // Number of decimals as a BigInt\r\n                canFreeze: false, // Token cannot be frozen\r\n                canWipe: false, // Token cannot be wiped\r\n                canPause: false, // Token cannot be paused\r\n                canChangeOwner: true, // Ownership can be changed\r\n                canUpgrade: true, // Token can be upgraded\r\n                canAddSpecialRoles: true, // Special roles can be added\r\n            });\r\n\r\n            // Fetch the account details to set the nonce\r\n            const account = await this.getAccount(address);\r\n            transaction.nonce = BigInt(account.nonce); // Set the nonce for the transaction\r\n\r\n            const signature = await this.signTransaction(transaction); // Sign the transaction\r\n            transaction.signature = signature; // Attach the signature to the transaction\r\n\r\n            // Send the transaction to the network and get the transaction hash\r\n            const txHash = await this.sendTransaction(transaction);\r\n\r\n            const transactionURL = this.getTransactionURL(txHash);\r\n            elizaLogger.log(`TxHash: ${txHash}`); // Log the transaction hash\r\n            elizaLogger.log(`Transaction URL: ${transactionURL}`); // View Transaction\r\n\r\n            return txHash; // Return the transaction hash\r\n        } catch (error) {\r\n            console.error(\"Error creating ESDT:\", error);\r\n            throw new Error(\r\n                `Failed to create ESDT: ${error.message || \"Unknown error\"}`,\r\n            ); // Throw an error if creation fails\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Create a transaction URL.\r\n     * @param txHash - Transaction hash\r\n     * @returns The transaction url for the given hash.\r\n     */\r\n    public getTransactionURL(txHash: string) {\r\n        return `${this.explorerURL}/transactions/${txHash}`;\r\n    }\r\n\r\n    /**\r\n     * Check if wallet has EGLD balance\r\n     * @param amount - EGLD amount to check\r\n     * @returns boolean\r\n     */\r\n    public async hasEgldBalance(amount?: string) {\r\n        const denominatedBalance = await this.getBalance();\r\n        const rawBalance = getRawAmount({\r\n            amount: denominatedBalance,\r\n            decimals: 18,\r\n        });\r\n        const rawBalanceNum = Number(rawBalance);\r\n\r\n        if (amount) {\r\n            const amountNum = Number(amount);\r\n            const hasBalance = rawBalanceNum >= amountNum + this.minEGLD;\r\n\r\n            return hasBalance;\r\n        }\r\n\r\n        return rawBalanceNum >= this.minEGLD;\r\n    }\r\n\r\n    /**\r\n     * Sign a message in order to receiver a signature\r\n     * @param messageToSign - the message to be signed\r\n     * @returns signature as Buffer<ArrayBufferLike>\r\n     */\r\n    public async signMessage(messageToSign: string) {\r\n        const computer = new MessageComputer();\r\n        const message = new Message({\r\n            data: Buffer.from(messageToSign),\r\n        });\r\n\r\n        const serializedTx = computer.computeBytesForSigning(message);\r\n        const signature = await this.signer.sign(serializedTx);\r\n        return signature;\r\n    }\r\n\r\n    public async sendTransaction(transaction: Transaction): Promise<string> {\r\n        return this.apiNetworkProvider.sendTransaction(transaction);\r\n    }\r\n\r\n    public async getAccount(address: Address): Promise<AccountOnNetwork> {\r\n        return this.apiNetworkProvider.getAccount(address);\r\n    }\r\n\r\n    public async getTokenData(\r\n        identifier: string,\r\n    ): Promise<FungibleTokenOfAccountOnNetwork> {\r\n        const address = this.getAddress();\r\n\r\n        return this.apiNetworkProvider.getFungibleTokenOfAccount(\r\n            address,\r\n            identifier,\r\n        );\r\n    }\r\n}\r\n","import BigNumber from \"bignumber.js\";\r\n\r\nBigNumber.config({ ROUNDING_MODE: BigNumber.ROUND_FLOOR });\r\n\r\ntype PayloadType = {\r\n    amount: string;\r\n    decimals: number;\r\n};\r\n\r\nexport const denominateAmount = ({ amount, decimals }: PayloadType) => {\r\n    return new BigNumber(amount)\r\n        .shiftedBy(decimals)\r\n        .decimalPlaces(0)\r\n        .toFixed(0);\r\n};\r\n\r\nexport const getRawAmount = ({ amount, decimals }: PayloadType) => {\r\n    return new BigNumber(amount).shiftedBy(-decimals).toFixed(4);\r\n};\r\n","// Network configuration object for different environments (mainnet, devnet, testnet)\r\nexport const MVX_NETWORK_CONFIG = {\r\n    mainnet: {\r\n        chainID: \"1\", // Mainnet chain ID\r\n        apiURL: \"https://api.multiversx.com\", // Mainnet API URL\r\n        explorerURL: \"https://explorer.multiversx.com\",\r\n        graphURL: \"https://internal-graph.xexchange.com/graphql\",\r\n    },\r\n    devnet: {\r\n        chainID: \"D\", // Devnet chain ID\r\n        apiURL: \"https://devnet-api.multiversx.com\", // Devnet API URL,\r\n        explorerURL: \"https://devnet-explorer.multiversx.com\",\r\n        graphURL: \"https://devnet-graph.xexchange.com/graphql\",\r\n    },\r\n    testnet: {\r\n        chainID: \"T\", // Testnet chain ID\r\n        apiURL: \"https://testnet-api.multiversx.com\", // Testnet API URL\r\n        explorerURL: \"https://testnet-explorer.multiversx.com\",\r\n        graphURL: \"https://testnet-graph.xexchange.com/graphql\",\r\n    },\r\n};\r\n","import { IAgentRuntime } from \"@elizaos/core\";\r\nimport { z } from \"zod\";\r\n\r\nexport const multiversxEnvSchema = z.object({\r\n    MVX_PRIVATE_KEY: z\r\n        .string()\r\n        .min(1, \"MultiversX wallet private key is required\"),\r\n    MVX_NETWORK: z.enum([\"mainnet\", \"devnet\", \"testnet\"]),\r\n});\r\n\r\nexport type MultiversxConfig = z.infer<typeof multiversxEnvSchema>;\r\n\r\nexport async function validateMultiversxConfig(\r\n    runtime: IAgentRuntime\r\n): Promise<MultiversxConfig> {\r\n    try {\r\n        const config = {\r\n            MVX_PRIVATE_KEY:\r\n                runtime.getSetting(\"MVX_PRIVATE_KEY\") ||\r\n                process.env.MVX_PRIVATE_KEY,\r\n            MVX_NETWORK:\r\n                runtime.getSetting(\"MVX_NETWORK\") || process.env.MVX_NETWORK,\r\n        };\r\n\r\n        return multiversxEnvSchema.parse(config);\r\n    } catch (error) {\r\n        if (error instanceof z.ZodError) {\r\n            const errorMessages = error.errors\r\n                .map((err) => `${err.path.join(\".\")}: ${err.message}`)\r\n                .join(\"\\n\");\r\n            throw new Error(\r\n                `MultiversX configuration validation failed:\\n${errorMessages}`\r\n            );\r\n        }\r\n        throw error;\r\n    }\r\n}\r\n","import { z } from \"zod\";\r\n\r\nexport const createTokenSchema = z.object({\r\n    tokenName: z.string().min(1, { message: \"Token name is required.\" }),\r\n    tokenTicker: z.string().min(1, { message: \"Token ticker is required.\" }),\r\n    amount: z\r\n        .number()\r\n        .positive({ message: \"Amount must be a positive number.\" }),\r\n    decimals: z\r\n        .number()\r\n        .int()\r\n        .min(0, { message: \"Decimals must be at least 0\" })\r\n        .max(18, { message: \"Decimals must be at most 18\" })\r\n        .nullable()\r\n        .optional(),\r\n});\r\n\r\nexport const transferSchema = z.object({\r\n    tokenAddress: z.string().min(1, { message: \"Token address is required.\" }),\r\n    amount: z.string().min(1, { message: \"Amount is required.\" }),\r\n    tokenIdentifier: z\r\n        .string()\r\n        .transform((val) => (val === \"null\" ? null : val))\r\n        .nullable()\r\n        .optional(),\r\n});\r\n\r\nexport const swapSchema = z.object({\r\n    tokenIn: z.string().min(1, { message: \"First token is required.\" }),\r\n    amountIn: z.string().min(1, { message: \"Amount is required.\" }),\r\n    tokenOut: z.string().min(1, { message: \"Second token is required.\" }),\r\n});\r\n","import { GraphQLClient } from \"graphql-request\";\r\n\r\nexport class GraphqlProvider {\r\n    private client: GraphQLClient;\r\n\r\n    /**\r\n     * Initialize the GraphQL client with the given URL and headers.\r\n     * @param url - The GraphQL endpoint URL.\r\n     * @param headers - Optional headers for the GraphQL client.\r\n     */\r\n    constructor(url: string, headers?: Record<string, string>) {\r\n        this.client = new GraphQLClient(url, { headers });\r\n    }\r\n\r\n    /**\r\n     * Execute a GraphQL query.\r\n     * @param query - The GraphQL query string.\r\n     * @param variables - Optional variables for the query.\r\n     * @returns The result of the query.\r\n     */\r\n    async query<T>(query: string, variables?: Record<string, any>): Promise<T> {\r\n        return this.client.request<T>(query, variables);\r\n    }\r\n}\r\n","import { NativeAuthClient } from \"@multiversx/sdk-native-auth-client\";\r\nimport { WalletProvider } from \"./wallet\";\r\n\r\ntype NativeAuthClientConfigType = {\r\n    origin?: string;\r\n    apiUrl: string;\r\n    expirySeconds?: number;\r\n    blockHashShard?: number;\r\n    gatewayUrl?: string;\r\n    extraRequestHeaders?: { [key: string]: string };\r\n};\r\n\r\nexport class NativeAuthProvider {\r\n    private client: NativeAuthClient;\r\n    public init: string;\r\n\r\n    /**\r\n     * Initialize the NativeAuth client with the given config.\r\n     * @param config - The NativeAuth config.\r\n     */\r\n    constructor(config?: NativeAuthClientConfigType) {\r\n        this.client = new NativeAuthClient(config);\r\n    }\r\n\r\n    /**\r\n     * Initialize the client and store the result in the `init` property.\r\n     */\r\n    public async initializeClient() {\r\n        this.init = await this.client.initialize();\r\n    }\r\n\r\n    /**\r\n     * Get an access token using the initialized client.\r\n     * @param address - The address of the user.\r\n     * @param signature - The signature for authentication.\r\n     * @returns The access token.\r\n     */\r\n    public async getAccessToken(provider: WalletProvider) {\r\n        if (!this.init) {\r\n            throw new Error(\r\n                \"Client is not initialized. Call initializeClient() first.\",\r\n            );\r\n        }\r\n        const address = provider.getAddress().toBech32();\r\n        const message = `${address}${this.init}`;\r\n\r\n        const signature = await provider.signMessage(message);\r\n\r\n        return this.client.getToken(\r\n            address,\r\n            this.init,\r\n            Buffer.from(signature).toString(\"hex\"),\r\n        );\r\n    }\r\n}\r\n","import { gql } from \"graphql-request\";\r\n\r\nexport const filteredTokensQuery = gql`\r\n    query filteredTokensQuery($filters: TokensFilter) {\r\n        filteredTokens(filters: $filters) {\r\n            edges {\r\n                node {\r\n                    type\r\n                    name\r\n                    identifier\r\n                    ticker\r\n                    liquidityUSD\r\n                    assets {\r\n                        description\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n`;\r\n","import { filteredTokensQuery } from \"../graphql/tokensQuery\";\r\nimport { GraphqlProvider } from \"../providers/graphql\";\r\n\r\ntype GetTokenType = {\r\n    provider: GraphqlProvider;\r\n    ticker: string;\r\n};\r\n\r\ntype FilteredTokensResponse = {\r\n    filteredTokens: {\r\n        edges: {\r\n            node: {\r\n                type: string;\r\n                name: string;\r\n                identifier: string;\r\n                ticker: string;\r\n                liquidityUSD: number;\r\n            };\r\n        }[];\r\n    };\r\n};\r\n\r\nexport const getToken = async ({ provider, ticker }: GetTokenType) => {\r\n    const { filteredTokens } = await provider.query<FilteredTokensResponse>(\r\n        filteredTokensQuery,\r\n        {\r\n            filters: {\r\n                searchToken: ticker,\r\n                enabledSwaps: true,\r\n            },\r\n        },\r\n    );\r\n\r\n    const token = filteredTokens.edges.find(\r\n        (token) => token?.node?.ticker?.toLowerCase() === ticker.toLowerCase(),\r\n    );\r\n\r\n    if (!token) {\r\n        throw new Error(\"Invalid token\");\r\n    }\r\n\r\n    return token.node;\r\n};\r\n","import {type IAgentRuntime, elizaLogger} from \"@elizaos/core\";\r\n\r\nexport function isUserAuthorized(\r\n    userId: string,\r\n    runtime: IAgentRuntime\r\n): boolean {\r\n    const authorizedUserId = runtime.getSetting(\"ACCESS_TOKEN_MANAGEMENT_TO\");\r\n    elizaLogger.log(\"UserID from message:\", userId);\r\n    elizaLogger.log(\"Authorized UserID:\", authorizedUserId);\r\n    if (authorizedUserId === \"everyone\") {\r\n        return true;\r\n    }\r\n    return userId === authorizedUserId;\r\n}\r\n","import {\r\n    elizaLogger,\r\n    type ActionExample,\r\n    type Content,\r\n    type HandlerCallback,\r\n    type IAgentRuntime,\r\n    type Memory,\r\n    ModelClass,\r\n    type State,\r\n    generateObject,\r\n    composeContext,\r\n    type Action,\r\n} from \"@elizaos/core\";\r\nimport { WalletProvider } from \"../providers/wallet\";\r\nimport { validateMultiversxConfig } from \"../environment\";\r\nimport { createTokenSchema } from \"../utils/schemas\";\r\nexport interface CreateTokenContent extends Content {\r\n    tokenName: string;\r\n    tokenTicker: string;\r\n    decimals: string;\r\n    amount: string;\r\n}\r\nimport { isUserAuthorized } from \"../utils/accessTokenManagement\";\r\n\r\nconst createTokenTemplate = `Respond with a JSON markdown block containing only the extracted values. Use null for any values that cannot be determined.\r\n\r\nExample response:\r\n\\`\\`\\`json\r\n{\r\n    \"tokenName\": \"TEST\",\r\n    \"tokenTicker\": \"TST\",\r\n    \"amount: 100,\r\n    \"decimals\": 18\r\n}\r\n\\`\\`\\`\r\n\r\n{{recentMessages}}\r\n\r\nGiven the recent messages, extract the following information about the requested token creation:\r\n- Token name\r\n- Token ticker\r\n- Amount\r\n- Decimals\r\n\r\nRespond with a JSON markdown block containing only the extracted values.`;\r\n\r\nexport default {\r\n    name: \"CREATE_TOKEN\",\r\n    similes: [\"DEPLOY_TOKEN\"],\r\n    validate: async (runtime: IAgentRuntime, message: Memory) => {\r\n        elizaLogger.log(\"Validating config for user:\", message.userId);\r\n        await validateMultiversxConfig(runtime);\r\n        return true;\r\n    },\r\n    description: \"Create a new token.\",\r\n    handler: async (\r\n        runtime: IAgentRuntime,\r\n        message: Memory,\r\n        state: State,\r\n        _options: { [key: string]: unknown },\r\n        callback?: HandlerCallback\r\n    ) => {\r\n        elizaLogger.log(\"Starting CREATE_TOKEN handler...\");\r\n\r\n        elizaLogger.log(\"Handler initialized. Checking user authorization...\");\r\n\r\n        if (!isUserAuthorized(message.userId, runtime)) {\r\n            elizaLogger.error(\r\n                \"Unauthorized user attempted to create a token:\",\r\n                message.userId\r\n            );\r\n            if (callback) {\r\n                callback({\r\n                    text: \"You do not have permission to create a token.\",\r\n                    content: { error: \"Unauthorized user\" },\r\n                });\r\n            }\r\n            return false;\r\n        }\r\n\r\n        // Initialize or update state\r\n        // if (!state) {\r\n        //     state = (await runtime.composeState(message)) as State;\r\n        // } else {\r\n        //     state = await runtime.updateRecentMessageState(state);\r\n        // }\r\n\r\n        // Initialize or update state\r\n        let currentState: State;\r\n        if (!state) {\r\n            currentState = (await runtime.composeState(message)) as State;\r\n        } else {\r\n            currentState = await runtime.updateRecentMessageState(state);\r\n        }\r\n\r\n        // Compose transfer context\r\n        const transferContext = composeContext({\r\n            state: currentState,\r\n            template: createTokenTemplate,\r\n        });\r\n\r\n        // Generate transfer content\r\n        const content = await generateObject({\r\n            runtime,\r\n            context: transferContext,\r\n            modelClass: ModelClass.SMALL,\r\n            schema: createTokenSchema,\r\n        });\r\n\r\n        const payload = content.object as CreateTokenContent;\r\n        const isCreateTokenContent =\r\n            payload.tokenName && payload.tokenName && payload.tokenName;\r\n\r\n        // Validate transfer content\r\n        if (!isCreateTokenContent) {\r\n            elizaLogger.error(\"Invalid content for CREATE_TOKEN action.\");\r\n            if (callback) {\r\n                callback({\r\n                    text: \"Unable to process transfer request. Invalid content provided.\",\r\n                    content: { error: \"Invalid transfer content\" },\r\n                });\r\n            }\r\n            return false;\r\n        }\r\n\r\n        try {\r\n            const privateKey = runtime.getSetting(\"MVX_PRIVATE_KEY\");\r\n            const network = runtime.getSetting(\"MVX_NETWORK\");\r\n\r\n            const walletProvider = new WalletProvider(privateKey, network);\r\n\r\n            const txHash = await walletProvider.createESDT({\r\n                tokenName: payload.tokenName,\r\n                amount: payload.amount,\r\n                decimals: Number(payload.decimals) || 18,\r\n                tokenTicker: payload.tokenTicker,\r\n            });\r\n\r\n            const txURL = walletProvider.getTransactionURL(txHash);\r\n            callback?.({\r\n                text: `Transaction sent successfully! You can view it here: ${txURL}.`,\r\n            });\r\n            return true;\r\n        } catch (error) {\r\n            elizaLogger.error(\"Error during creating token:\", error);\r\n            if (callback) {\r\n                callback({\r\n                    text: `Error creating token: ${error.message}`,\r\n                    content: { error: error.message },\r\n                });\r\n            }\r\n            return false;\r\n        }\r\n    },\r\n\r\n    examples: [\r\n        [\r\n            {\r\n                user: \"{{user1}}\",\r\n                content: {\r\n                    text: \"Create a token XTREME with ticker XTR and supply of 10000\",\r\n                    action: \"CREATE_TOKEN\",\r\n                },\r\n            },\r\n            {\r\n                user: \"{{user2}}\",\r\n                content: {\r\n                    text: \"Successfully created token.\",\r\n                },\r\n            },\r\n        ],\r\n        [\r\n            {\r\n                user: \"{{user1}}\",\r\n                content: {\r\n                    text: \"Create a token TEST with ticker TST, 18 decimals and supply of 10000\",\r\n                    action: \"CREATE_TOKEN\",\r\n                },\r\n            },\r\n            {\r\n                user: \"{{user2}}\",\r\n                content: {\r\n                    text: \"Successfully created token.\",\r\n                },\r\n            },\r\n        ],\r\n    ] as ActionExample[][],\r\n} as Action;\r\n","import {\r\n    elizaLogger,\r\n    type ActionExample,\r\n    type Content,\r\n    type HandlerCallback,\r\n    type IAgentRuntime,\r\n    type Memory,\r\n    ModelClass,\r\n    type State,\r\n    composeContext,\r\n    generateObject,\r\n    type Action,\r\n} from \"@elizaos/core\";\r\nimport { WalletProvider } from \"../providers/wallet\";\r\nimport { GraphqlProvider } from \"../providers/graphql\";\r\nimport { validateMultiversxConfig } from \"../environment\";\r\nimport { swapSchema } from \"../utils/schemas\";\r\nimport { MVX_NETWORK_CONFIG } from \"../constants\";\r\nimport { swapQuery } from \"../graphql/swapQuery\";\r\nimport { NativeAuthProvider } from \"../providers/nativeAuth\";\r\nimport {\r\n    FungibleTokenOfAccountOnNetwork,\r\n    Transaction,\r\n    TransactionPayload,\r\n} from \"@multiversx/sdk-core/out\";\r\nimport { denominateAmount, getRawAmount } from \"../utils/amount\";\r\nimport { getToken } from \"../utils/getToken\";\r\nimport { filteredTokensQuery } from \"../graphql/tokensQuery\";\r\nimport { isUserAuthorized } from \"../utils/accessTokenManagement\";\r\n\r\n\r\ntype SwapResultType = {\r\n    swap: {\r\n        noAuthTransactions: {\r\n            value: string;\r\n            receiver: string;\r\n            gasPrice: bigint;\r\n            gasLimit: bigint;\r\n            data: TransactionPayload;\r\n            chainID: string;\r\n            version: number;\r\n            sender: string;\r\n            nonce: number;\r\n        }[];\r\n    };\r\n};\r\n\r\nexport interface ISwapContent extends Content {\r\n    tokenIn: string;\r\n    amountIn: string;\r\n    tokenOut: string;\r\n}\r\n\r\nconst swapTemplate = `Respond with a JSON markdown block containing only the extracted values. Use null for any values that cannot be determined.\r\n\r\nExample response:\r\n\\`\\`\\`json\r\n{\r\n    \"tokenIn\": \"EGLD\",\r\n    \"amountIn\": \"1\",\r\n    \"tokenOut\": \"MEX\"\r\n}\r\n\\`\\`\\`\r\n\r\n{{recentMessages}}\r\n\r\nGiven the recent messages, extract the following information about the requested token transfer:\r\n- Source token\r\n- Amount to transfer\r\n- Destination token\r\n\r\nRespond with a JSON markdown block containing only the extracted values.`;\r\n\r\nexport default {\r\n    name: \"SWAP\",\r\n    similes: [\"SWAP_TOKEN\", \"SWAP_TOKENS\"],\r\n    validate: async (runtime: IAgentRuntime, message: Memory) => {\r\n        elizaLogger.log(\"Validating config for user:\", message.userId);\r\n        await validateMultiversxConfig(runtime);\r\n        return true;\r\n    },\r\n    description: \"Swap tokens\",\r\n    handler: async (\r\n        runtime: IAgentRuntime,\r\n        message: Memory,\r\n        state: State,\r\n        _options: { [key: string]: unknown },\r\n        callback?: HandlerCallback,\r\n    ) => {\r\n        elizaLogger.log(\"Starting SWAP handler...\");\r\n\r\n        elizaLogger.log(\"Handler initialized. Checking user authorization...\");\r\n\r\n                if (!isUserAuthorized(message.userId, runtime)) {\r\n                    elizaLogger.error(\r\n                        \"Unauthorized user attempted to swap:\",\r\n                        message.userId\r\n                    );\r\n                    if (callback) {\r\n                        callback({\r\n                            text: \"You do not have permission to swap.\",\r\n                            content: { error: \"Unauthorized user\" },\r\n                        });\r\n                    }\r\n                    return false;\r\n                }\r\n\r\n        // Initialize or update state\r\n        // if (!state) {\r\n        //     state = (await runtime.composeState(message)) as State;\r\n        // } else {\r\n        //     state = await runtime.updateRecentMessageState(state);\r\n        // }\r\n        let currentState: State;\r\n        if (!state) {\r\n            currentState = (await runtime.composeState(message)) as State;\r\n        } else {\r\n            currentState = await runtime.updateRecentMessageState(state);\r\n        }\r\n\r\n        // Compose transfer context\r\n        const swapContext = composeContext({\r\n            state: currentState,\r\n            template: swapTemplate,\r\n        });\r\n\r\n        // Generate transfer content\r\n        const content = await generateObject({\r\n            runtime,\r\n            context: swapContext,\r\n            modelClass: ModelClass.SMALL,\r\n            schema: swapSchema,\r\n        });\r\n\r\n        const swapContent = content.object as ISwapContent;\r\n\r\n        const isSwapContent =\r\n            typeof swapContent.tokenIn === \"string\" &&\r\n            typeof swapContent.tokenOut === \"string\" &&\r\n            typeof swapContent.amountIn === \"string\";\r\n\r\n        // Validate transfer content\r\n        if (!isSwapContent) {\r\n            elizaLogger.error(\"Invalid content for SWAP action.\");\r\n\r\n            callback?.({\r\n                text: \"Unable to process swap request. Invalid content provided.\",\r\n                content: { error: \"Invalid swap content\" },\r\n            });\r\n\r\n            return false;\r\n        }\r\n\r\n        try {\r\n            const privateKey = runtime.getSetting(\"MVX_PRIVATE_KEY\");\r\n            const network = runtime.getSetting(\"MVX_NETWORK\");\r\n            const networkConfig = MVX_NETWORK_CONFIG[network];\r\n            const walletProvider = new WalletProvider(privateKey, network);\r\n            const isEGLD = swapContent.tokenIn.toLowerCase() === \"egld\";\r\n\r\n            const hasEgldBalance = await walletProvider.hasEgldBalance(\r\n                isEGLD ? swapContent.amountIn : undefined,\r\n            );\r\n\r\n            if (!hasEgldBalance) {\r\n                throw new Error(\"Insufficient balance.\");\r\n            }\r\n\r\n            const nativeAuthProvider = new NativeAuthProvider({\r\n                apiUrl: networkConfig.apiURL,\r\n            });\r\n\r\n            await nativeAuthProvider.initializeClient();\r\n            const address = walletProvider.getAddress().toBech32();\r\n\r\n            const accessToken =\r\n                await nativeAuthProvider.getAccessToken(walletProvider);\r\n\r\n            const graphqlProvider = new GraphqlProvider(\r\n                networkConfig.graphURL,\r\n                { Authorization: `Bearer ${accessToken}` },\r\n            );\r\n\r\n            let tokenData: FungibleTokenOfAccountOnNetwork = null;\r\n            let tokenIn = swapContent.tokenIn;\r\n            let tokenOut = swapContent.tokenOut;\r\n            const [tickerOut, nonceOut] = swapContent.tokenOut.split(\"-\");\r\n\r\n            if (!isEGLD) {\r\n                const [tickerIn, nonceIn] = swapContent.tokenIn.split(\"-\");\r\n\r\n                if (!nonceIn) {\r\n                    const token = await getToken({\r\n                        provider: graphqlProvider,\r\n                        ticker: tickerIn,\r\n                    });\r\n                    tokenIn = token.identifier;\r\n                }\r\n\r\n                if (!nonceOut && tickerOut.toLowerCase() !== \"egld\") {\r\n                    const token = await getToken({\r\n                        provider: graphqlProvider,\r\n                        ticker: tickerOut,\r\n                    });\r\n                    tokenOut = token.identifier;\r\n                }\r\n\r\n                tokenData = await walletProvider.getTokenData(tokenIn);\r\n\r\n                const rawBalance = getRawAmount({\r\n                    amount: tokenData.balance.toString(),\r\n                    decimals: tokenData.rawResponse.decimals,\r\n                });\r\n                const rawBalanceNum = Number(rawBalance);\r\n\r\n                if (rawBalanceNum < Number(swapContent.amountIn)) {\r\n                    throw new Error(\"Insufficient balance\");\r\n                }\r\n            }\r\n\r\n            if (!nonceOut && tickerOut.toLowerCase() !== \"egld\") {\r\n                const token = await getToken({\r\n                    provider: graphqlProvider,\r\n                    ticker: tickerOut,\r\n                });\r\n                tokenOut = token.identifier;\r\n            }\r\n\r\n            const value = denominateAmount({\r\n                amount: swapContent.amountIn,\r\n                decimals: isEGLD ? 18 : tokenData?.rawResponse?.decimals,\r\n            });\r\n\r\n            const variables = {\r\n                amountIn: value,\r\n                tokenInID: tokenIn,\r\n                tokenOutID: tokenOut,\r\n                tolerance: 0.01,\r\n                sender: address,\r\n            };\r\n\r\n            const { swap } = await graphqlProvider.query<SwapResultType>(\r\n                swapQuery,\r\n                variables,\r\n            );\r\n\r\n            if (!swap.noAuthTransactions) {\r\n                throw new Error(\"No route found\");\r\n            }\r\n\r\n            const txURLs = await Promise.all(\r\n                swap.noAuthTransactions.map(async (transaction) => {\r\n                    const txToBroadcast = { ...transaction };\r\n                    txToBroadcast.sender = address;\r\n                    txToBroadcast.data = TransactionPayload.fromEncoded(\r\n                        transaction.data as unknown as string,\r\n                    );\r\n\r\n                    const account = await walletProvider.getAccount(\r\n                        walletProvider.getAddress(),\r\n                    );\r\n                    txToBroadcast.nonce = account.nonce;\r\n\r\n                    const tx = new Transaction(txToBroadcast);\r\n                    const signature = await walletProvider.signTransaction(tx);\r\n                    tx.applySignature(signature);\r\n\r\n                    const txHash = await walletProvider.sendTransaction(tx);\r\n                    return walletProvider.getTransactionURL(txHash); // Return the transaction URL\r\n                }),\r\n            );\r\n\r\n            const transactionURLs = txURLs.join(\",\");\r\n            callback?.({\r\n                text: `Transaction(s) sent successfully! You can view it here: ${transactionURLs}.`,\r\n            });\r\n            return true;\r\n        } catch (error) {\r\n            elizaLogger.error(\"Error during token swap:\", error);\r\n            callback?.({\r\n                text: \"Could not execute the swap.\",\r\n                content: { error: error.message },\r\n            });\r\n\r\n            return \"\";\r\n        }\r\n    },\r\n\r\n    examples: [\r\n        [\r\n            {\r\n                user: \"{{user1}}\",\r\n                content: {\r\n                    text: \"Swap 1 EGLD for USDC\",\r\n                },\r\n            },\r\n            {\r\n                user: \"{{agent}}\",\r\n                content: {\r\n                    text: \"Swapping 1 EGLD for USDC...\",\r\n                },\r\n            },\r\n        ],\r\n    ] as ActionExample[][],\r\n} as Action;\r\n","import { gql } from \"graphql-request\";\r\n\r\nconst transactionsPlaceholder = \"TRANSACTIONS_PLACEHOLDER\";\r\n\r\nconst transactionAttributes = `\r\n  value\r\n  receiver\r\n  gasPrice\r\n  gasLimit\r\n  data\r\n  chainID\r\n  version\r\n`;\r\n\r\nconst transactionsString = `\r\n  noAuthTransactions(sender: $sender) {\r\n    ${transactionAttributes}\r\n  }\r\n`;\r\n\r\nconst swapString = `\r\n  query swapPackageSwapRoute (\r\n    $amountIn: String\r\n    $amountOut: String\r\n    $tokenInID: String!\r\n    $tokenOutID: String!\r\n    $tolerance: Float!\r\n    $sender: String!\r\n  ) {\r\n    swap(\r\n      amountIn: $amountIn\r\n      amountOut: $amountOut\r\n      tokenInID: $tokenInID\r\n      tokenOutID: $tokenOutID\r\n      tolerance: $tolerance\r\n    ) {\r\n      amountIn\r\n      tokenInID\r\n\r\n      amountOut\r\n      tokenOutID\r\n\r\n      ${transactionsPlaceholder}\r\n    }\r\n  }\r\n`;\r\n\r\nexport const swapQuery = gql`\r\n    ${swapString.replace(transactionsPlaceholder, transactionsString)}\r\n`;\r\n","import type { Plugin } from \"@elizaos/core\";\r\nimport transfer from \"./actions/transfer\";\r\nimport createToken from \"./actions/createToken\";\r\nimport swap from \"./actions/swap\";\r\n\r\nexport const multiversxPlugin: Plugin = {\r\n    name: \"multiversx\",\r\n    description: \"MultiversX Plugin for Eliza\",\r\n    actions: [transfer, createToken, swap],\r\n    evaluators: [],\r\n    providers: [],\r\n};\r\n\r\nexport default multiversxPlugin;\r\n"],"mappings":"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","names":["len","i","len2","Buffer","byteLength","exports","Buffer","elizaLogger","config","Buffer","config","z","config","Buffer","token","elizaLogger","elizaLogger","txHash","txURL","elizaLogger","ModelClass","generateObject","composeContext","elizaLogger","composeContext","generateObject","ModelClass","elizaLogger","ModelClass","composeContext","generateObject","gql","elizaLogger","composeContext","generateObject","ModelClass"]}