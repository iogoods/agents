import c from'chalk';import ne from'cli-table3';import Ye from'ora';import {elizaLogger}from'@elizaos/core';import {HermesClient}from'@pythnetwork/hermes-client';import {z}from'zod';import Pe from'ajv';var C=class extends Error{constructor(t,n,a="MEDIUM",o,s){super(n);this.code=t;this.message=n;this.severity=a;this.details=o;this.originalError=s;this.timestamp=Date.now(),Object.setPrototypeOf(this,new.target.prototype);}timestamp;name="PythError";toJSON(){return {name:this.name,code:this.code,message:this.message,severity:this.severity,timestamp:this.timestamp,details:this.details,stack:this.stack,originalError:this.originalError?{name:this.originalError.name,message:this.originalError.message,stack:this.originalError.stack}:undefined}}};var i=class r extends C{name="DataError";constructor(e,t,n="MEDIUM",a,o){super(e,t,n,a,o),Object.setPrototypeOf(this,new.target.prototype);}static invalidSubscription(e,t){return new r("DATA_INVALID_SUBSCRIPTION","Invalid subscription parameters","MEDIUM",{subscription:e,reason:t})}static subscriptionLimitExceeded(e,t){return new r("DATA_SUBSCRIPTION_LIMIT",`Subscription limit exceeded (${e}/${t})`,"HIGH",{currentCount:e,maxLimit:t})}static validationFailed(e,t){return new r("DATA_VALIDATION_FAILED","Data validation failed","MEDIUM",{data:e,validationErrors:t})}static sequenceError(e,t,n){return new r("DATA_SEQUENCE_ERROR",`Message sequence error: expected ${e}, received ${t}`,"MEDIUM",{expected:e,received:t,...n})}static transformError(e,t,n){return new r("DATA_TRANSFORM_ERROR","Failed to transform data","MEDIUM",{data:e,targetFormat:t},n)}static schemaError(e,t,n){return new r("DATA_SCHEMA_ERROR","Data does not match schema","HIGH",{data:e,schema:t},n)}static stalePriceError(e,t,n){return new r("DATA_STALE_PRICE",`Price data for ${e} is stale`,"HIGH",{symbol:e,lastUpdateTime:t,maxAge:n,currentTime:Date.now()})}static chainError(e,t,n){return new r("DATA_CHAIN_ERROR",`Chain-specific error on ${e} during ${t}`,"HIGH",{chain:e,operation:t},n)}};var w="mainnet",oe={mainnet:{hermes:process.env.PYTH_MAINNET_HERMES_URL||"https://hermes.pyth.network",wss:process.env.PYTH_MAINNET_WSS_URL||"wss://hermes.pyth.network/ws",pythnet:process.env.PYTH_MAINNET_PYTHNET_URL||"https://pythnet.rpcpool.com",contractRegistry:process.env.PYTH_MAINNET_CONTRACT_REGISTRY||"https://pyth.network/developers/price-feed-ids",programKey:process.env.PYTH_MAINNET_PROGRAM_KEY||"FsJ3A3u2vn5cTVofAjvy6y5kwABJAqYWpe4975bi2epH"},testnet:{hermes:process.env.PYTH_TESTNET_HERMES_URL||"https://hermes.pyth.network",wss:process.env.PYTH_TESTNET_WSS_URL||"wss://hermes.pyth.network/ws",pythnet:process.env.PYTH_TESTNET_PYTHNET_URL||"https://pythnet.rpcpool.com",contractRegistry:process.env.PYTH_TESTNET_CONTRACT_REGISTRY||"https://pyth.network/developers/price-feed-ids#testnet",programKey:process.env.PYTH_TESTNET_PROGRAM_KEY||"FsJ3A3u2vn5cTVofAjvy6y5kwABJAqYWpe4975bi2epH"}},se=z.object({PYTH_NETWORK_ENV:z.enum(["mainnet","testnet"]).default("mainnet"),PYTH_MAX_RETRIES:z.string().transform(Number).default("3"),PYTH_RETRY_DELAY:z.string().transform(Number).default("1000"),PYTH_TIMEOUT:z.string().transform(Number).default("5000"),PYTH_GRANULAR_LOG:z.boolean().default(true),PYTH_LOG_LEVEL:z.enum(["error","warn","info","debug"]).default("info"),RUNTIME_CHECK_MODE:z.boolean().default(false),PYTH_ENABLE_PRICE_STREAMING:z.boolean().default(true),PYTH_MAX_PRICE_STREAMS:z.string().transform(Number).default("10"),PYTH_TEST_ID01:z.string().default("0xe62df6c8b4a85fe1a67db44dc12de5db330f7ac66b72dc658afedf0f4a415b43"),PYTH_TEST_ID02:z.string().default("0xff61491a931112ddf1bd8147cd1b641375f79f5825126d665480874634fd0ace")});function P(r=w||process.env.PYTH_NETWORK_ENV){return w=r||"mainnet",{PYTH_NETWORK_ENV:r||"mainnet",PYTH_MAX_RETRIES:Number(process.env.PYTH_MAX_RETRIES||"3"),PYTH_RETRY_DELAY:Number(process.env.PYTH_RETRY_DELAY||"1000"),PYTH_TIMEOUT:Number(process.env.PYTH_TIMEOUT||"5000"),PYTH_GRANULAR_LOG:process.env.PYTH_GRANULAR_LOG==="true"||false,PYTH_LOG_LEVEL:process.env.PYTH_LOG_LEVEL||"info",RUNTIME_CHECK_MODE:process.env.RUNTIME_CHECK_MODE==="true"||false,PYTH_ENABLE_PRICE_STREAMING:process.env.PYTH_ENABLE_PRICE_STREAMING==="true"||true,PYTH_MAX_PRICE_STREAMS:Number(process.env.PYTH_MAX_PRICE_STREAMS||"10"),PYTH_TEST_ID01:process.env.PYTH_TEST_ID01||"0xe62df6c8b4a85fe1a67db44dc12de5db330f7ac66b72dc658afedf0f4a415b43",PYTH_TEST_ID02:process.env.PYTH_TEST_ID02||"0xff61491a931112ddf1bd8147cd1b641375f79f5825126d665480874634fd0ace"}}async function S(r){try{let e=P(r.getSetting("PYTH_NETWORK_ENV")??void 0),t={PYTH_NETWORK_ENV:process.env.PYTH_NETWORK_ENV||r.getSetting("PYTH_NETWORK_ENV")||e.PYTH_NETWORK_ENV,PYTH_MAX_RETRIES:process.env.PYTH_MAX_RETRIES||r.getSetting("PYTH_MAX_RETRIES")||e.PYTH_MAX_RETRIES.toString(),PYTH_RETRY_DELAY:process.env.PYTH_RETRY_DELAY||r.getSetting("PYTH_RETRY_DELAY")||e.PYTH_RETRY_DELAY.toString(),PYTH_GRANULAR_LOG:process.env.PYTH_GRANULAR_LOG==="true"||!1,PYTH_LOG_LEVEL:process.env.PYTH_LOG_LEVEL||r.getSetting("PYTH_LOG_LEVEL")||e.PYTH_LOG_LEVEL,RUNTIME_CHECK_MODE:process.env.RUNTIME_CHECK_MODE==="true"||!1,PYTH_ENABLE_PRICE_STREAMING:process.env.PYTH_ENABLE_PRICE_STREAMING==="true"||!0,PYTH_MAX_PRICE_STREAMS:process.env.PYTH_MAX_PRICE_STREAMS||r.getSetting("PYTH_MAX_PRICE_STREAMS")||e.PYTH_MAX_PRICE_STREAMS.toString(),PYTH_TEST_ID01:process.env.PYTH_TEST_ID01||e.PYTH_TEST_ID01,PYTH_TEST_ID02:process.env.PYTH_TEST_ID02||e.PYTH_TEST_ID02};return se.parse(t)}catch(e){let t=e instanceof Error?e.message:String(e);throw new Error(`Failed to validate Pyth configuration: ${t}`)}}var D=(r=w)=>oe[r];var ce=z.object({asset_type:z.string(),base:z.string(),description:z.string(),display_symbol:z.string(),quote_currency:z.string(),schedule:z.string(),symbol:z.string(),generic_symbol:z.string().optional(),cms_symbol:z.string().optional(),country:z.string().optional(),cqs_symbol:z.string().optional(),nasdaq_symbol:z.string().optional(),contract_id:z.string().optional()}),pe=z.object({text:z.string(),query:z.string().optional(),filter:z.string().optional(),success:z.boolean().optional(),data:z.object({feeds:z.array(z.object({id:z.string(),attributes:ce})),count:z.number(),responseType:z.string(),isArray:z.boolean(),error:z.string().optional()}).optional()});async function Y(r){try{let e=await pe.parseAsync(r);return elizaLogger.debug("Price feeds validation passed",{result:e}),!0}catch(e){throw elizaLogger.error("Price feeds validation failed",{error:e}),new i("DATA_VALIDATION_FAILED","Price feeds validation failed","HIGH",{error:e})}}var le=P(),Ee=le.PYTH_GRANULAR_LOG,T=(r,e)=>{Ee&&(elizaLogger.info(`[PriceFeeds] ${r}`,e),console.log(`[PriceFeeds] ${r}`,e?JSON.stringify(e,null,2):""));},_e={name:"GET_PRICE_FEEDS",similes:["FETCH_PRICE_FEEDS","LIST_PRICE_FEEDS","QUERY_PRICE_FEEDS"],description:"Retrieve price feeds from Pyth Network matching specific criteria",examples:[[{user:"user",content:{text:"Get all available price feeds from Pyth Network",query:"BTC",filter:"USD"}},{user:"assistant",content:{text:"Price feeds matching query BTC and filter USD",success:true,query:"BTC",filter:"USD",data:{feeds:[{id:"f9c0172ba10dfa4d19088d94f5bf61d3b54d5bd7483a322a982e1373ee8ea31b",attributes:{asset_type:"Crypto",base:"BTC",description:"BITCOIN / US DOLLAR",display_symbol:"BTC/USD",generic_symbol:"BTCUSD",quote_currency:"USD",schedule:"America/New_York;O,O,O,O,O,O,O;",symbol:"Crypto.BTC/USD"}}]}}}]],async validate(r,e){if(e.content?.type!=="GET_PRICE_FEEDS")return  true;T("Starting validation",{messageId:e.id,content:e.content});try{let t=e.content;T("Validating content structure",{content:t});try{await Y(t),T("Schema validation passed");}catch(a){throw T("Schema validation error",{error:a}),a instanceof i?(elizaLogger.error("Schema validation failed",{errors:a.details?.errors}),a):new i("DATA_VALIDATION_FAILED","Schema validation failed","HIGH",{error:a})}let n=await S(r);if(T("Pyth config validation",{config:n}),!n)throw new i("DATA_VALIDATION_FAILED","Invalid Pyth configuration","HIGH");if(t.query&&typeof t.query!="string")throw T("Invalid query type",{query:t.query}),new i("DATA_VALIDATION_FAILED","Query must be a string","HIGH");if(t.filter&&typeof t.filter!="string")throw T("Invalid filter type",{filter:t.filter}),new i("DATA_VALIDATION_FAILED","Filter must be a string","HIGH");return T("Validation successful",{query:t.query,filter:t.filter}),!0}catch(t){throw T("Validation failed",{error:t instanceof Error?{message:t.message,stack:t.stack,name:t.name}:String(t)}),t instanceof i?t:new i("DATA_VALIDATION_FAILED","Invalid content format","HIGH",{content:e.content})}},async handler(r,e,t,n={},a){T("Starting handler execution",{messageId:e.id,hasCallback:!!a});try{let o=e.content,{query:s,filter:d}=o;T("Processing request",{query:s,filter:d});let E=await S(r);T("Got Pyth config",{networkEnv:E.PYTH_NETWORK_ENV});let A=D(E.PYTH_NETWORK_ENV);T("Network config",{networkConfig:A});let g=new HermesClient(A.hermes);T("Initialized HermesClient",{endpoint:A.hermes});let u={query:s,filter:d};T("Fetching price feeds with options",{options:u,hermesEndpoint:A.hermes,clientType:typeof g.getPriceFeeds});let f=await g.getPriceFeeds(u);T("Retrieved price feeds",{responseType:typeof f,isArray:Array.isArray(f),count:f?.length||0,sample:f?.slice(0,3)||[]});let p=f.map(m=>({id:m.id,attributes:{asset_type:m.attributes?.asset_type||"Unknown",base:m.attributes?.base||"Unknown",description:m.attributes?.description||"Unknown",display_symbol:m.attributes?.display_symbol||"Unknown",quote_currency:m.attributes?.quote_currency||"Unknown",schedule:m.attributes?.schedule||"",symbol:m.attributes?.symbol||"Unknown",generic_symbol:m.attributes?.generic_symbol,cms_symbol:m.attributes?.cms_symbol,country:m.attributes?.country,cqs_symbol:m.attributes?.cqs_symbol,nasdaq_symbol:m.attributes?.nasdaq_symbol,contract_id:m.attributes?.contract_id}})),y={text:`Retrieved ${f.length} price feeds:
${p.map(m=>`- ${m.attributes.description} (${m.attributes.display_symbol})
  Type: ${m.attributes.asset_type}
  Base: ${m.attributes.base}
  Quote: ${m.attributes.quote_currency}
  Schedule: ${m.attributes.schedule}
  ID: ${m.id}`).join(`
`)}
${s?`
Matching query: "${s}"`:""}${d?`
With filter: "${d}"`:""}`,query:s,filter:d,success:!0,data:{feeds:p,count:f.length,responseType:"object",isArray:!0}};return T("Prepared callback content",{feedCount:p.length,firstFeed:p[0]}),a&&(T("Executing callback"),await a(y),T("Callback completed")),!0}catch(o){let s=o instanceof Error?o.message:"Unknown error occurred",d=o instanceof Error?o.stack:undefined;T("Error retrieving price feeds",{error:s,stack:d});let E={text:`Failed to retrieve price feeds: ${s}
Error details: ${d||"No stack trace available"}`,success:false,data:{feeds:[],error:s,count:0,responseType:"object",isArray:true}};throw a&&await a(E),new i("PRICE_FEEDS_FETCH_FAILED",s,"HIGH")}}},V=_e;var me=z.object({encoding:z.enum(["hex","base64"]).optional(),parsed:z.boolean().optional(),allowUnordered:z.boolean().optional(),benchmarksOnly:z.boolean().optional()}),ue=z.object({slot:z.number(),proof_available_time:z.number(),prev_publish_time:z.number()}),$=z.object({price:z.string(),conf:z.string(),expo:z.number(),publish_time:z.number()}),fe=z.object({id:z.string(),price:$,ema_price:$,metadata:ue.optional()}),Te=z.object({encoding:z.string(),data:z.array(z.string())}),Ae=z.object({text:z.string(),priceIds:z.array(z.string().regex(/^0x[0-9a-fA-F]{64}$/)),options:me.optional(),success:z.boolean().optional(),data:z.object({streamId:z.string(),status:z.enum(["connected","disconnected","error"]),binary:Te.optional(),parsed:z.array(fe).optional(),error:z.string().optional()}).optional()});async function B(r){try{let e=await Ae.parseAsync(r);return elizaLogger.debug("Price update stream validation passed",{result:e}),!0}catch(e){throw elizaLogger.error("Price update stream validation failed",{error:e}),new i("DATA_VALIDATION_FAILED","Price update stream validation failed","HIGH",{error:e})}}var j=P(),Re=j.PYTH_GRANULAR_LOG,x=Number(j.PYTH_MAX_PRICE_STREAMS),H=new Map,b=(r,e)=>{Re&&(elizaLogger.info(`[PriceUpdatesStream] ${r}`,e),console.log(`[PriceUpdatesStream] ${r}`,e?JSON.stringify(e,null,2):""));};function K(r){let e=[],t=r.match(/(?:BTC|ETH|SOL)\/USD/g);if(t){let n={"BTC/USD":"0xe62df6c8b4a85fe1a67db44dc12de5db330f7ac66b72dc658afedf0f4a415b43","ETH/USD":"0xff61491a931112ddf1bd8147cd1b641375f79f5825126d665480874634fd0ace","SOL/USD":"0xef0d8b6fda2ceba41da15d4095d1da392a0d2f8ed0c6c7bc0f4cfac8c280b56d"};e=t.map(a=>n[a]).filter(a=>a);}if(e.length===0){let n=r.match(/0x[0-9a-fA-F]{64}/g);if(n)e=n;else {let a=r.match(/[0-9a-fA-F]{64}/g);a&&(e=a.map(o=>`0x${o}`));}}return e}function be(r){return {binary:r.binary,parsed:r.parsed.map(e=>({id:e.id,price:{price:e.price.price,conf:e.price.conf,expo:e.price.expo,publish_time:e.price.publish_time},ema_price:{price:e.ema_price.price,conf:e.ema_price.conf,expo:e.ema_price.expo,publish_time:e.ema_price.publish_time},metadata:e.metadata?{slot:e.metadata.slot,proof_available_time:e.metadata.proof_available_time,prev_publish_time:e.metadata.prev_publish_time}:undefined}))}}function ge(r,e,t){return `Price Update Stream (ID: stream_${r}, Update ${e}/${x}):
${t.parsed.map(n=>`Price Feed: ${n.id}
Current Price: ${(Number(n.price.price)*Math.pow(10,n.price.expo)).toFixed(2)} USD
Confidence: \xB1${(Number(n.price.conf)*Math.pow(10,n.price.expo)).toFixed(2)} USD
EMA Price: ${(Number(n.ema_price.price)*Math.pow(10,n.ema_price.expo)).toFixed(2)} USD
EMA Confidence: \xB1${(Number(n.ema_price.conf)*Math.pow(10,n.ema_price.expo)).toFixed(2)} USD
Last Update: ${new Date(n.price.publish_time*1e3).toLocaleString()}${n.metadata?`
Slot: ${n.metadata.slot}
Proof Available: ${new Date(n.metadata.proof_available_time*1e3).toLocaleString()}`:""}`).join(`

`)}`}async function Se(r,e){return new Promise((t,n)=>{let a=0,o={binary:{encoding:"hex",data:[]},parsed:[]};r.onmessage=s=>{a++,b("Received price update",{streamId:e,messageCount:a,data:s.data});try{let d=JSON.parse(s.data);o.binary.data.push(...d.binary.data),o.parsed.push(...d.parsed),a>=x&&(r.close(),t(o));}catch(d){r.close(),n(d);}},r.onerror=s=>{r.close(),n(s);};})}async function Ne(r,e,t){let n=await S(r);if(!n)throw new i("DATA_VALIDATION_FAILED","Invalid Pyth configuration","HIGH");let a=D(n.PYTH_NETWORK_ENV),o=new HermesClient(a.hermes),s=`stream_${Date.now()}`;b("Creating price stream for IDs:",{streamId:s,priceIds:e});try{let d=await o.getPriceUpdatesStream(e,{parsed:!0,encoding:"hex"});H.set(s,d);try{let E=await Se(d,s),A=be(E),g=ge(s,x,E);t&&t({text:g,success:!0,priceIds:e,data:{streamId:s,status:"connected",...A}}),H.delete(s),b("Stream completed successfully",{streamId:s});}catch(E){throw b("Error collecting stream data",{streamId:s,error:E}),t&&t({text:`Error processing price updates: ${E instanceof Error?E.message:String(E)}`,success:!1,priceIds:e,data:{streamId:s,status:"error",error:E instanceof Error?E.message:String(E)}}),H.delete(s),E}}catch(d){throw b("Error creating price stream",{streamId:s,error:d}),new i("DATA_TRANSFORM_ERROR",d instanceof Error?d.message:String(d),"HIGH")}}var he={name:"GET_PRICE_UPDATES_STREAM",similes:["STREAM_PRICE_UPDATES","SUBSCRIBE_TO_PRICES","WATCH_PRICE_FEED"],description:"Create a streaming connection for real-time price updates from Pyth Network",examples:[[{user:"user",content:{text:"Stream BTC/USD price updates",priceIds:["0xe62df6c8b4a85fe1a67db44dc12de5db330f7ac66b72dc658afedf0f4a415b43"],options:{encoding:"hex",parsed:true,benchmarksOnly:true}}},{user:"assistant",content:{text:"Starting BTC/USD price stream...",success:true,priceIds:["0xe62df6c8b4a85fe1a67db44dc12de5db330f7ac66b72dc658afedf0f4a415b43"],data:{streamId:"stream_1",status:"connected",updates:[{id:"0xe62df6c8b4a85fe1a67db44dc12de5db330f7ac66b72dc658afedf0f4a415b43",price:42e3,confidence:100,timestamp:1641034800,emaPrice:41950}]}}}],[{user:"user",content:{text:"Stream ETH and BTC prices with benchmarks only",priceIds:["0xe62df6c8b4a85fe1a67db44dc12de5db330f7ac66b72dc658afedf0f4a415b43","0xff61491a931112ddf1bd8147cd1b641375f79f5825126d665480874634fd0ace"],options:{benchmarksOnly:true,parsed:true}}},{user:"assistant",content:{text:"Starting price stream for BTC and ETH...",success:true,priceIds:["0xe62df6c8b4a85fe1a67db44dc12de5db330f7ac66b72dc658afedf0f4a415b43","0xff61491a931112ddf1bd8147cd1b641375f79f5825126d665480874634fd0ace"],data:{streamId:"stream_2",status:"connected",updates:[{id:"0xe62df6c8b4a85fe1a67db44dc12de5db330f7ac66b72dc658afedf0f4a415b43",price:42e3,confidence:100,timestamp:1641034800,emaPrice:41950},{id:"0xff61491a931112ddf1bd8147cd1b641375f79f5825126d665480874634fd0ace",price:2500,confidence:50,timestamp:1641034800,emaPrice:2495}]}}}]],validate:async(r,e)=>{if(e.content?.type!=="GET_PRICE_UPDATES_STREAM")return  true;b("Starting validation",{content:e.content});try{let t=e.content;if(!t.priceIds){let a=K(t.text);a.length>0&&(t={...t,priceIds:a,options:{parsed:!0,encoding:"hex"}},e.content=t);}try{await B(t),b("Schema validation passed");}catch(a){throw b("Schema validation failed",{error:a}),a instanceof i?(elizaLogger.error("Schema validation failed",{errors:a.details?.errors}),a):new i("DATA_VALIDATION_FAILED","Schema validation failed","HIGH",{error:a})}if(!await S(r))throw new i("DATA_VALIDATION_FAILED","Invalid Pyth configuration","HIGH");if(!t.priceIds||!Array.isArray(t.priceIds))throw i.validationFailed(t,["priceIds must be an array of strings"]);if(t.priceIds.length===0)throw i.validationFailed(t,["priceIds array cannot be empty"]);if(t.priceIds.forEach((a,o)=>{if(!/^0x[0-9a-fA-F]{64}$/.test(a))throw i.validationFailed(t,[`Invalid price ID at index ${o}: ${a}`])}),t.options){let{encoding:a,parsed:o,allowUnordered:s,benchmarksOnly:d}=t.options;if(a&&!["hex","base64"].includes(a))throw i.validationFailed(t,["encoding must be either 'hex' or 'base64'"]);if(o!==void 0&&typeof o!="boolean")throw i.validationFailed(t,["parsed must be a boolean"]);if(s!==void 0&&typeof s!="boolean")throw i.validationFailed(t,["allowUnordered must be a boolean"]);if(d!==void 0&&typeof d!="boolean")throw i.validationFailed(t,["benchmarksOnly must be a boolean"])}return b("GET_PRICE_UPDATES_STREAM validation successful",{priceIds:t.priceIds,options:t.options}),!0}catch(t){throw b("Validation failed",{error:t}),t}},async handler(r,e,t,n={},a){b("Starting handler execution",{messageId:e.id,messageContent:e.content});try{let o=e.content,s=o.priceIds;if(!s&&(s=K(o.text),s.length===0))throw new i("DATA_VALIDATION_FAILED","Could not extract any valid price IDs from message","HIGH");return await Ne(r,s,a),!0}catch(o){throw b("Error in price updates stream handler",o),new i("DATA_TRANSFORM_ERROR",o instanceof Error?o.message:String(o),"HIGH")}}},X=he;var De=new Pe({allErrors:true,verbose:true,coerceTypes:true,useDefaults:true}),ye={type:"object",required:["priceIds"],properties:{text:{type:"string"},priceIds:{type:"array",items:{type:"string",pattern:"^(0x)?[0-9a-fA-F]+$"},minItems:1,description:"Array of price feed IDs to fetch updates for"},options:{type:"object",properties:{encoding:{type:"string",enum:["hex","base64"],description:"Encoding format for the price updates"},parsed:{type:"boolean",description:"Whether to return parsed price updates"}}}}};async function J(r){try{let e=De.compile(ye);if(!e(r)){let n=e.errors||[];throw elizaLogger.error("Price updates validation failed",{errors:n,data:r}),new i("DATA_VALIDATION_FAILED","Price updates validation failed","HIGH",{errors:n.map(a=>({path:a.schemaPath,message:a.message,params:a.params})),data:r})}return !0}catch(e){throw e instanceof i?e:(elizaLogger.error("Price updates validation error",{error:e instanceof Error?e.message:String(e),data:r}),new i("DATA_SCHEMA_ERROR","Price updates validation error","HIGH",{error:e instanceof Error?e.message:String(e),data:r}))}}var Oe=P(),Le=Oe.PYTH_GRANULAR_LOG,I=(r,e)=>{Le&&(elizaLogger.info(`[PriceUpdates] ${r}`,e),console.log(`[PriceUpdates] ${r}`,e?JSON.stringify(e,null,2):""));},L=r=>r.toLowerCase().startsWith("0x")?r.toLowerCase():`0x${r.toLowerCase()}`,Q=r=>r.toLowerCase().startsWith("0x")?r.toLowerCase():`0x${r.toLowerCase()}`,we={name:"GET_LATEST_PRICE_UPDATES",similes:["FETCH_LATEST_PRICES","GET_CURRENT_PRICES","CHECK_PRICE_FEED"],description:"Retrieve latest price updates from Pyth Network",examples:[[{user:"user",content:{text:"Get latest price updates for 0xe62df6c8b4a85fe1a67db44dc12de5db330f7ac66b72dc658afedf0f4a415b43",priceIds:["0xe62df6c8b4a85fe1a67db44dc12de5db330f7ac66b72dc658afedf0f4a415b43"],options:{encoding:"base64",parsed:true}}},{user:"assistant",content:{text:"Here is the latest BTC/USD price",success:true,priceIds:["0xe62df6c8b4a85fe1a67db44dc12de5db330f7ac66b72dc658afedf0f4a415b43"],data:{updates:[{price_feed_id:"0xe62df6c8b4a85fe1a67db44dc12de5db330f7ac66b72dc658afedf0f4a415b43",price:42e9,conf:1e8,expo:-8,publish_time:1641034800,ema_price:{price:4195e7,conf:95e6,expo:-8}}]}}}]],validate:async(r,e)=>{if(e.content?.type!=="GET_LATEST_PRICE_UPDATES")return  true;I("Validating GET_LATEST_PRICE_UPDATES action",{content:e.content});try{let t=e.content;if(!t.priceIds&&t.text){let n=t.text.match(/([a-fA-F0-9]{64})/);n&&(t.priceIds=[Q(n[1])]);}t.priceIds&&(t.priceIds=t.priceIds.map(L));try{await J(t),I("Schema validation passed");}catch(n){throw I("Schema validation failed",{error:n}),n instanceof i?(elizaLogger.error("Schema validation failed",{errors:n.details?.errors}),n):new i("DATA_VALIDATION_FAILED","Schema validation failed","HIGH",{error:n})}if(!t.priceIds||!Array.isArray(t.priceIds))throw new i("DATA_VALIDATION_FAILED","priceIds must be an array of strings","HIGH");if(t.priceIds.length===0)throw new i("DATA_VALIDATION_FAILED","priceIds array cannot be empty","HIGH");if(t.priceIds.forEach((n,a)=>{let o=n.startsWith("0x")?n.slice(2):n;if(!/^[0-9a-fA-F]{64}$/.test(o))throw new i("DATA_VALIDATION_FAILED",`Invalid price ID at index ${a}: ${n}. Must be a 64-character hex string`,"HIGH")}),t.options&&t.options.encoding&&!["hex","base64"].includes(t.options.encoding))throw new i("DATA_VALIDATION_FAILED","Invalid encoding option. Must be 'hex' or 'base64'","HIGH");return !0}catch(t){return I("Validation failed",{error:t}),elizaLogger.error("Validation failed for GET_LATEST_PRICE_UPDATES",{error:t instanceof Error?t.message:String(t)}),false}},handler:async(r,e,t,n={},a)=>{I("Executing GET_LATEST_PRICE_UPDATES action");try{let o=e.content;if(I("Message content received",o),!o.priceIds&&o.text){let u=o.text.match(/([a-fA-F0-9]{64})/);u&&(o.priceIds=[Q(u[1])]);}o.priceIds&&(o.priceIds=o.priceIds.map(L));let{priceIds:s,options:d={}}=o;I("Extracted values",{priceIds:s,options:d});let E=await S(r);if(!E)throw new i("DATA_VALIDATION_FAILED","Invalid Pyth configuration","HIGH");let A=D(E.PYTH_NETWORK_ENV),g=new HermesClient(A.hermes);I("Initialized HermesClient",{endpoint:A.hermes});try{I("Requesting price updates with params",{priceIds:s,options:d});let u=await g.getLatestPriceUpdates(s,{parsed:!0,encoding:d?.encoding});if(I("Raw response from Hermes",{updates:u}),!u||!u.parsed)throw new Error("No updates received from Hermes");if(I("Successfully retrieved price updates",{updates:u,parsedCount:u.parsed?.length}),a){let f=u.parsed?.map(p=>{let y=p.metadata,m=y?.proof_available_time;return `Price Feed: ${L(p.id)}
Current Price: ${(Number(p.price.price)*Math.pow(10,p.price.expo)).toFixed(2)} USD
Confidence: \xB1${(Number(p.price.conf)*Math.pow(10,p.price.expo)).toFixed(2)} USD
EMA Price: ${(Number(p.ema_price.price)*Math.pow(10,p.ema_price.expo)).toFixed(2)} USD
EMA Confidence: \xB1${(Number(p.ema_price.conf)*Math.pow(10,p.ema_price.expo)).toFixed(2)} USD
Last Update: ${new Date(p.price.publish_time*1e3).toLocaleString()}${y?`
Slot: ${y.slot}
Proof Available: ${m?new Date(m*1e3).toLocaleString():"Not available"}`:""}`}).join(`

`);a({text:f,success:!0,priceIds:s,data:{updates:u.parsed?.map(p=>({price_feed_id:L(p.id),price:Number(p.price.price),conf:Number(p.price.conf),expo:p.price.expo,publish_time:p.price.publish_time,ema_price:p.ema_price?{price:Number(p.ema_price.price),conf:Number(p.ema_price.conf),expo:p.ema_price.expo}:void 0,metadata:p.metadata}))}});}return !0}catch(u){throw I("Failed to process price updates request",{error:u}),a&&a({text:`Error retrieving price updates: ${u instanceof Error?u.message:String(u)}`,success:!1,priceIds:s,data:{error:u instanceof Error?u.message:String(u)}}),new i("DATA_VALIDATION_FAILED","Failed to process price updates request","HIGH",{originalError:u})}}catch(o){throw I("Failed to get latest price updates",{error:o}),new i("NETWORK_ERROR","Failed to get latest price updates","HIGH",{originalError:o})}}},Z=we;var xe=new Pe({allErrors:true,verbose:true,coerceTypes:true,useDefaults:true}),ve={type:"object",properties:{text:{type:"string"},success:{type:"boolean"},data:{type:"object",properties:{caps:{type:"array",items:{type:"object",required:["publisher","cap","timestamp"],properties:{publisher:{type:"string",pattern:"^0x[a-fA-F0-9]{40}$"},cap:{type:"number",minimum:0},timestamp:{type:"number",minimum:0}}}},error:{type:"string"}}}}};async function te(r){try{let e=xe.compile(ve);if(!e(r)){let n=e.errors||[];throw elizaLogger.error("Publisher caps validation failed",{errors:n,data:r}),new i("DATA_VALIDATION_FAILED","Publisher caps validation failed","HIGH",{errors:n.map(a=>({path:a.schemaPath,message:a.message,params:a.params})),data:r})}return !0}catch(e){throw e instanceof i?e:(elizaLogger.error("Publisher caps validation error",{error:e instanceof Error?e.message:String(e),data:r}),new i("DATA_SCHEMA_ERROR","Publisher caps validation error","HIGH",{error:e instanceof Error?e.message:String(e),data:r}))}}var Me=P(),Ge=Me.PYTH_GRANULAR_LOG,N=(r,e)=>{Ge&&(elizaLogger.info(`[PublisherCaps] ${r}`,e),console.log(`[PublisherCaps] ${r}`,e?JSON.stringify(e,null,2):""));},Fe={name:"GET_LATEST_PUBLISHER_CAPS",similes:["FETCH_PUBLISHER_CAPS","GET_PUBLISHER_LIMITS","CHECK_PUBLISHER_CAPS"],description:"Retrieve latest publisher caps from Pyth Network",examples:[[{user:"user",content:{text:"Get me all the latest publisher caps"}},{user:"assistant",content:{text:"Latest publisher caps",success:true,data:{caps:[{publisher:"0x1234567890abcdef1234567890abcdef12345678",cap:1e6,timestamp:1641034800}]}}}]],validate:async(r,e)=>{if(e.content?.type!=="GET_LATEST_PUBLISHER_CAPS")return  true;N("Validating GET_LATEST_PUBLISHER_CAPS action",{content:e.content});try{let t=e.content;try{await te(t),N("Publisher caps validation passed");}catch(n){throw N("Publisher caps validation failed",{error:n}),n instanceof i?(elizaLogger.error("Publisher caps validation failed",{errors:n.details?.errors}),n):new i("DATA_VALIDATION_FAILED","Publisher caps validation failed","HIGH",{error:n})}return !0}catch(t){return N("Validation failed",{error:t}),elizaLogger.error("Validation failed for GET_LATEST_PUBLISHER_CAPS",{error:t instanceof Error?t.message:String(t)}),false}},handler:async(r,e,t,n={},a)=>{N("Executing GET_LATEST_PUBLISHER_CAPS action");try{let o=await S(r);if(!o)throw new i("DATA_VALIDATION_FAILED","Invalid Pyth configuration","HIGH");let s=D(o.PYTH_NETWORK_ENV),d=new HermesClient(s.hermes);N("Initialized HermesClient",{endpoint:s.hermes});try{let E=await d.getLatestPublisherCaps({parsed:!0});if(!E.parsed?.[0]?.publisher_stake_caps)throw new i("DATA_VALIDATION_FAILED","No publisher caps data found in response","HIGH");let A=E.parsed[0].publisher_stake_caps,g=Date.now();A.forEach((f,p)=>{N(`Publisher Cap ${p+1}`,{publisher:f.publisher,cap:f.cap.toLocaleString(),timestamp:new Date(g).toLocaleString()});}),N("Successfully retrieved publisher caps",{totalCaps:A.length,allCaps:A.map(f=>({publisher:f.publisher,cap:f.cap.toLocaleString(),timestamp:new Date(g).toLocaleString()}))});let u=A.map((f,p)=>`Publisher ${p+1}:
ID: ${f.publisher}
Cap: ${f.cap.toLocaleString()} tokens
Timestamp: ${new Date(g).toLocaleString()}`).join(`

`);return a&&await a({text:`Retrieved ${A.length} publisher caps:

${u}`,success:!0,data:{caps:A.map(f=>({publisher:f.publisher,cap:f.cap,timestamp:g}))}}),!0}catch(E){throw N("Failed to process publisher caps request",{error:E}),E instanceof i?E:new i("DATA_VALIDATION_FAILED","Failed to process publisher caps request","HIGH",{originalError:E})}}catch(o){throw N("Failed to get publisher caps",{error:o}),o instanceof i?o:new i("NETWORK_ERROR","Failed to get publisher caps","HIGH",{originalError:o})}}},re=Fe;var ke=Ye({text:c.cyan("Initializing Pyth Data Plugin..."),spinner:"dots12",color:"cyan"}).start();await new Promise(r=>setTimeout(r,1e3));var M=[V,X,Z,re];console.log(`
`+c.cyan("\u250C\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510"));console.log(c.cyan("\u2502")+c.yellow.bold("          PYTH DATA PLUGIN             ")+c.cyan(" \u2502"));console.log(c.cyan("\u251C\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524"));console.log(c.cyan("\u2502")+c.white("  Initializing Pyth Data Services...    ")+c.cyan("\u2502"));console.log(c.cyan("\u2502")+c.white("  Version: 1.0.0                        ")+c.cyan("\u2502"));console.log(c.cyan("\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518"));ke.succeed(c.green("Pyth Data Plugin initialized successfully!"));var ae=new ne({head:[c.cyan("Action"),c.cyan("H"),c.cyan("V"),c.cyan("E"),c.cyan("Similes")],style:{head:[],border:["cyan"]}});M.forEach(r=>{ae.push([c.white(r.name),typeof r.handler=="function"?c.green("\u2713"):c.red("\u2717"),typeof r.validate=="function"?c.green("\u2713"):c.red("\u2717"),r.examples?.length>0?c.green("\u2713"):c.red("\u2717"),c.gray(r.similes?.join(", ")||"none")]);});console.log(`
`+ae.toString());var ie=new ne({style:{border:["cyan"]}});ie.push([c.cyan("Plugin Status")],[c.white("Name    : ")+c.yellow("pyth-data")],[c.white("Actions : ")+c.green(M.length.toString())],[c.white("Status  : ")+c.green("Loaded & Ready")]);console.log(`
`+ie.toString()+`
`);var Ve={name:"pyth-data",description:"Pyth Data Plugin for price feeds and market data",actions:M,evaluators:[]};var qt=Ve;export{qt as default,Ve as pythDataPlugin};//# sourceMappingURL=index.js.map
//# sourceMappingURL=index.js.map